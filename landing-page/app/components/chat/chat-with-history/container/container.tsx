import React from 'react'
import './container.css'
// import { CarouselImage } from '../../../features/types'

export type CarouselImage = {
    imageId: string
    imageName: string
    question: string
}


type OpeningContainerProps = {
    onQuestionClick: (question: string) => void
    // containerQues: CarouselImage[]
    containerQues?: string[]

}

const PlaneIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" id="airplane-mode" >
        <path fill="#61A0B5" d="M22,13.5c0,0.5-0.5,1-1,1h-6.1l-4.7,5.2C10,19.9,9.8,20,9.5,20h-2c-0.3,0-0.7-0.2-0.8-0.5c-0.2-0.3-0.2-0.6-0.1-0.9l1.7-4.1H6.5C4,14.5,2,12.5,2,10V5.5c0-0.4,0.3-0.8,0.7-0.9c0.4-0.1,0.8,0,1.1,0.3l2.6,3c0.4,0.4,0.9,0.7,1.5,0.7h7.1C18.3,8.5,22,8.9,22,13.5z" />
        <path fill="#96C0CE" d="M14.9,8.5H8.3L6.6,4.4C6.5,4.1,6.5,3.7,6.7,3.5C6.8,3.2,7.2,3,7.5,3h2c0.3,0,0.5,0.1,0.7,0.3L14.9,8.5z" />
    </svg>

)

const WebIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 32 32" id="web">
        <g color="#000">
            <path fill="#f05542" d="M237 1579.362c-4.413 0-8 3.588-8 8 0 4.413 3.588 8.002 8 8.002s8-3.59 8-8.002c0-4.412-3.588-8-8-8zm-.5 1.102v2.648h-4.924c1.18-1.504 2.9-2.498 4.924-2.648zm1 0c2.024.15 3.745 1.144 4.924 2.648H237.5v-2.648zm-6.598 3.648h5.598v2.75h-6.398c.074-.999.352-1.912.8-2.75zm6.598 0h5.598c.448.838.726 1.751.8 2.75H237.5v-2.75zm-7.4 3.75h6.4v2.752h-5.598a6.844 6.844 0 0 1-.802-2.752zm7.4 0h6.4a6.843 6.843 0 0 1-.802 2.752H237.5v-2.752zm-5.924 3.752h4.924v2.649c-2.024-.15-3.745-1.145-4.924-2.649zm5.924 0h4.924c-1.18 1.504-2.9 2.498-4.924 2.649v-2.649z" transform="translate(-221 -1569.362)" />
            <path fill="#f05542" fillRule="evenodd" d="M233.957 1580.192c-1.938 4.773-2.26 9.333-.146 14.287l.92-.392c-2.014-4.722-1.72-8.91.152-13.518l-.926-.377zm6.03 0-.926.377c1.87 4.608 2.166 8.796.152 13.518l.92.392c2.113-4.954 1.792-9.514-.147-14.287z" transform="translate(-221 -1569.362)" />
            <path fill="#2b4255" d="M223.5 1571.362a.5.5 0 0 0-.5.5v27a.5.5 0 0 0 .5.5h27a.5.5 0 0 0 .5-.5v-14.615a.5.5 0 1 0-1 0v14.115h-26v-26h26v7.305a.5.5 0 1 0 1 0v-7.805a.5.5 0 0 0-.5-.5h-27zm26.992 9.598a.5.5 0 0 0-.492.508v.888a.5.5 0 1 0 1 0v-.888a.5.5 0 0 0-.508-.508z" transform="translate(-221 -1569.362)" />
            <path fill="#2b4255" fillRule="evenodd" d="M223.5 1575.362v1h27v-1h-27z" transform="translate(-221 -1569.362)" />
            <path fill="#f05542" d="M226 1573.863a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5zm2 0a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5zm2 0a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5z" transform="translate(-221 -1569.362)" />
        </g>
    </svg>
)

const OutfitIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" id="dart-arrow">
        <path fill="#40596b" d="M15.739 5.471l.87.73-1.579 1.883-.87-.731z"></path>
        <path fill="#40596b" d="M15.64 4.141l2.073 1.742-.69.822-2.073-1.742zM3.957 7.17l-.87.731-1.579-1.883.87-.73z"></path>
        <path fill="#40596b" d="M3.944 5.045.87 7.31.179 6.094l2.073-1.742zM8.395 2.745h1.355v1.825H8.395z"></path>
        <path fill="#40596b" d="M7.353 1.831h3.258v1.199H7.353z"></path>
        <circle cx="9.065" cy="13.105" r="9.065" fill="#40596b" transform="rotate(-79.146 9.065 13.105)"></circle>
        <circle cx="9.065" cy="13.105" r="7.633" fill="#fdfdfd" transform="rotate(-79.141 9.065 13.105)"></circle>
        <circle cx="9.065" cy="13.105" r="5.755" fill="#ff7058" transform="rotate(-58.46 9.065 13.105)"></circle>
        <path fill="#fdfdfd" d="M13.286 13.105c0 2.32-1.88 4.21-4.21 4.21s-4.21-1.88-4.21-4.21 1.88-4.21 4.21-4.21 4.21 1.88 4.21 4.21z"></path>
        <path fill="#ff7058" d="M10.943 13.105a1.876 1.876 0 1 1-1.876-1.876c1.037 0 1.876.84 1.876 1.876z"></path>
        <g fill="#40596b">
            <path d="M9.013 5.794h.272v.907h-.272zM5.345 6.898l.234-.135.448.777-.234.135zM2.687 9.69l.135-.234.777.448-.135.234zM1.765 13.615v-.272h.907v.272zM2.83 17.485l-.135-.234.777-.448.135.234zM5.593 20.268l-.234-.135.448-.777.234.135zM9.262 21.147h-.272v-.907h.272zM12.928 20.043l-.234.135-.448-.777.234-.135zM15.585 17.28l-.135.234-.777-.448.135-.234zM16.472 13.355v.272h-.907v-.272zM15.356 9.486l.135.234-.777.448-.135-.234zM12.593 6.722l.234.135-.448.777-.234-.135z"></path>
        </g>
        <path fill="#ffd15c" d="M20.23 14.52l-.088-.103-.874-.867H9.869a.469.469 0 0 1-.469-.469c0-.259.21-.469.469-.469h9.493c.314-.27.615-.576.897-.912l.026-.031h4.469l-1.73 1.56h-3.354v.179h3.354l1.73 1.618H20.23z"></path>
    </svg>


)

const StudyIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" xmlSpace="preserve" enableBackground="new 0 0 64 64" viewBox="0 0 64 64" width="24" height="24">
        <linearGradient id="a" x1="32" x2="32" y1="27.445" y2="60.311" gradientUnits="userSpaceOnUse">
            <stop offset="0" stopColor="#ffb9a4" />
            <stop offset="1" stopColor="#ef7337" />
        </linearGradient>
        <path fill="url(#a)" d="M5.9,23.9c-0.3,0-0.5,0-0.7,0.1c-1.8,0.4-3.2,2-3.2,4v28.4c0,2.2,1.8,4.1,4,4.1h10h42c2.2,0,4-1.8,4-4.1V27.9
      c0-1.7-1.1-3.2-2.6-3.8c-0.4-0.2-0.8-0.2-1.3-0.2L5.9,23.9z" />
        <linearGradient id="b" x1="50.717" x2="21.913" y1="35.904" y2="51.991" gradientUnits="userSpaceOnUse">
            <stop offset="0" stopColor="#ffb9a4" />
            <stop offset="1" stopColor="#ef7337" />
        </linearGradient>
        <path fill="url(#b)" d="M32,41.2v19.2c0,0,9.2-4.7,24-5.1c1.1,0,2-1,2-2.1V20.8c0-1.2-1-2.2-2.2-2.1C41.1,19.1,32,23.7,32,23.7V37" />
        <linearGradient id="c" x1="33.176" x2="4.372" y1="35.904" y2="51.991" gradientTransform="matrix(-1 0 0 1 46.5 0)" gradientUnits="userSpaceOnUse">
            <stop offset="0" stopColor="#ffb9a4" />
            <stop offset="1" stopColor="#ef7337" />
        </linearGradient>
        <path fill="url(#c)" d="M8.1,18.6C22.9,19.1,32,23.7,32,23.7v36.7c0,0-9.2-4.7-24-5.1c-1.1,0-2-1-2-2.1V20.8
      C6,19.6,6.9,18.6,8.1,18.6z" />
        <path fill="#fff" d="M55.9 18.6C41.1 19.1 32 23.7 32 23.7v2.6c0 0 9.1-4.6 23.9-5.1 1.2 0 2.2.9 2.2 2.1v-2.6C58.1 19.6 57.1 18.6 55.9 18.6zM8.1 18.6c-1.2 0-2.2.9-2.2 2.1v2.6c0-1.2 1-2.2 2.2-2.1C22.9 21.7 32 26.3 32 26.3v-2.6C32 23.7 22.9 19.1 8.1 18.6z" opacity=".8" />
        <g>
            <linearGradient id="d" x1="21.5" x2="42.5" y1="23.75" y2="23.75" gradientUnits="userSpaceOnUse">
                <stop offset="0" stopColor="#fff383" />
                <stop offset="1" stopColor="#fcee21" />
            </linearGradient>
            <path fill="url(#d)" d="M42.5,21.3c0-6.2-5.4-11.2-11.7-10.5c-4.7,0.5-8.5,4.3-9.2,8.9c-0.6,4,1.1,7.7,4,9.9c1.4,1.1,2.4,2.8,2.4,4.6
        v0c0,1.3,1.1,2.4,2.4,2.4h3.2c1.3,0,2.4-1.1,2.4-2.4v0c0-1.8,0.9-3.5,2.3-4.6C40.9,27.8,42.5,24.7,42.5,21.3z" />
            <path fill="#f4b33b" d="M42,22.8c0,0-2,5-10,5s-10-5-10-5l0.4,2.8c0.7,1.7,1.8,3.1,3.2,4.2c1.4,1.1,2.4,2.8,2.4,4.6v0
        c0,1.3,1.1,2.4,2.4,2.4h3.2c1.3,0,2.4-1.1,2.4-2.4v0c0-1.8,0.9-3.5,2.3-4.6c1.4-1.1,2.5-2.6,3.3-4.2L42,22.8z" opacity=".4" />
            <ellipse cx="32" cy="15.3" fill="#fff5b0" rx="5" ry="2.5" />
        </g>
    </svg>
)

const RelaxIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" id="yoga-pose">
        <g>
            <path fill="#db5669" d="M19.25,14.08l-2.52,0.84L16,13V18.5H8V13l-0.72,1.93L4.75,14.08l0.7-2.3a3,3,0,0,1,2.36-2.08c3.25-0.55,1.94-0.46,5.67-0.46l2.69,0.45a3,3,0,0,1,2.38,2.09C19.31,14.31,19.18,13.88,19.25,14.08Z"></path>
            <path fill="#f26674" d="M19.25,14.08l-2.52,0.84L16,13v5.5h-6a1,1,0,0,1-1-1v-3.88a0.69,0.69,0,0,0-.5-0.35c-0.46,1.24-0.37,1-0.5,1.3a2.09,2.09,0,0,1-1.21-2.54,3.45,3.45,0,0,1,1-1.85l0.5-0.22c3.26-0.55,1.95-0.46,5.67-0.46l2.69,0.45a3,3,0,0,1,2.38,2.09C19.31,14.31,19.18,13.88,19.25,14.08Z"></path>
            <path fill="#f6ccaf" d="M13.5,8.1c0,0.83,0.09,1.36-0.38,1.89a1.5,1.5,0,0,1-2.26-1.5v-0.91Z"></path>
            <path fill="#ffdec7" d="M13.5,8.1c0,0.83,0.09,1.36-0.38,1.89A1.5,1.5,0,0,1,11.5,8.5v-0.4Z"></path>
            <path fill="#f6ccaf" d="M15,3.5c0,1.82,0.26,3.29-1.18,4.39a3,3,0,0,1-4.82-2.78V3.5A3,3,0,0,1,15,3.5Z"></path>
            <path fill="#ffdec7" d="M15,3.5c0,1.82,0.26,3.29-1.18,4.39A3,3,0,0,1,10,5c0-1.82-0.26-3.29,1.18-4.39A3,3,0,0,1,15,3.5Z"></path>
            <path fill="#a87e6b" d="M15,3.5V4c-1.18,0-2.36,0.14-3.5-1-0.56,1.13-1.64,1-2.5,1V3.5A3,3,0,0,1,15,3.5Z"></path>
            <path fill="#be927c" d="M15,3.5V4c-1.18,0-2.36,0.14-3.5-1a1.78,1.78,0,0,1-1.5,1V3.5a3,3,0,0,1,2.5-2.95A3,3,0,0,1,15,3.5Z"></path>
            <path fill="#f6ccaf" d="M16,20.5v3H8.56a1.06,1.06,0,0,1-.13-2.11C11.16,21,3.33,22,16,20.5Z"></path>
            <path fill="#ffdec7" d="M16,20.5v2H9.56A1.06,1.06,0,0,1,8.5,21.38Z"></path>
            <path fill="#6fabe6" d="M18.85,23.5H16v-3c2.76-0.31,2.87-0.39,3.41-0.21h0a1.65,1.65,0,0,1-.56,3.21ZM8.56,23.5c-3.5,0-3.94,0.15-4.58-0.5a1.65,1.65,0,0,1,1.21-2.21c0.5-0.18,0.15-0.16,7.4,0.68L8.56,21a1.06,1.06,0,0,0-.13,2.11Z"></path>
            <path fill="#82bcf4" d="M12,21l-3.56,0.41a1.07,1.07,0,0,0-0.31,0.54c0,0.08,0.16,0.06-1.35,0.06a1.65,1.65,0,0,1-1.55-2.2C5.14,20.11,4.9,20.16,12,21ZM19.5,20.85a1.65,1.65,0,0,1-1.65,1.65H16v-3c2.76-0.31,2.87-0.39,3.41-0.21A1.77,1.77,0,0,1,19.5,20.85Z"></path>
            <path fill="#6fabe6" d="M19,20.21c-0.21-0.03,0.22-0.06-7,0.77c-0.05,0,0.07,0-6.66-0.77-0.4-0.03-1,.39,2.66-1.71H16Z"></path>
            <path fill="#82bcf4" d="M18.37,19.86C12.86,20.5,13,20.5,13,20.5L8.5,19.9a0.5,0.5,0,0,1-.19-0.93l0.94-0.93H16Z"></path>
            <path fill="#f6ccaf" d="M7.28,14.93c-0.74,2-0.8,2.31-1.24,2.82C3.5,20.83,3.6,20.75,3.25,20.89a1.25,1.25,0,0,1-1.41-2C5.23,16.73,4.12,17.2,5.41,14.93C5.9,14.46,5.33,14.28,7.28,14.93Z"></path>
            <path fill="#ffdec7" d="M7.28,14.93c-0.74,2-0.8,2.31-1.24,2.82C3.5,20.83,3.6,20.75,3.25,20.89a1.28,1.28,0,0,1-.41-2C5.25,16.79,4.15,17.29,5.33,13.5Z"></path>
            <path fill="#f6ccaf" d="M21.25,21a1.26,1.26,0,0,1-.91-0.5C18,18.83,18.9,19.17,17.95,14.93l2.52-0.84c0.79,2.59,0.17,1.5,2.91,4.8A1.27,1.27,0,0,1,21.25,21Z"></path>
            <path fill="#ffdec7" d="M21.75,20.89a1.13,1.13,0,0,1-.46-0.34C18.18,16.83,18.9,19.17,17.55,14.65l1.7-0.56c0.79,2.59,0.17,1.5,2.91,4.8A1.28,1.28,0,0,1,21.75,20.89Z"></path>
        </g>
    </svg>
)


const OpeningContainer: React.FC<OpeningContainerProps> = ({ onQuestionClick, containerQues }) => {

    const icons = [
        <PlaneIcon />,
        <WebIcon />,
        <OutfitIcon />,
        <StudyIcon />,
        <RelaxIcon />
    ]
    return (
        <div className="opening-container">
            <div className='questions-list flex flex-wrap justify-center'>
                {containerQues && containerQues.length > 0 ? (
                    containerQues.map((question, index) => (
                        <div key={index} className='min-h-28 w-40 p-3.5 m-2 border border-[#ccc] rounded-2xl cursor-pointer' onClick={() => onQuestionClick(question)}>
                            <div>{icons[index]}</div>
                            <div className='text-sm pt-2'>{question}</div>
                        </div>
                    ))
                ) : (
                    <div>No Questions available</div>
                )}
            </div>
            {/* <div className="questions-grid">
                {containerQues && containerQues.length > 0 ? (
                    containerQues.map((question, index) => (
                        <div key={index} className="question-item" onClick={() => onQuestionClick(question.question)}>
                            <div className="icon">{icons[index]}</div>
                            <div className="text">{question.question}</div>
                        </div>
                    ))
                ) : (
                    <div>No questions available</div>
                )}
            </div> */}

        </div>
    )
}

export default OpeningContainer


// import React from 'react'
// import './container.css'
// // import { CarouselImage } from '../../../features/types'

// export type CarouselImage = {
//     imageId: string
//     imageName: string
//     question: string
// }

// type OpeningContainerProps = {
//     onQuestionClick: (question: string) => void
//     containerQues: CarouselImage[]

// }

// const PlaneIcon = () => (
//     // <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
//     //     <path d="M12 2L15 22L12 18L9 22L12 2Z" fill="#FFD700" />
//     // </svg>
//     // <svg width="26" height="26" viewBox="0 -15.5 1055 1055" className="icon" version="1.1" xmlns="http://www.w3.org/2000/svg">
//     //     <path d="M481.585477 550.846892H220.730596l20.908514 20.892841 83.587039 41.801356h113.539192zM766.703014 498.606952s-23.510324 31.347099-15.67355 52.23994h-112.269634l-44.591248 62.694197H764.085531l47.020648-2.617482 15.673549-47.020648-60.076714-65.296007zM382.701055 681.454579h148.898718l-33.964581 62.694197h-146.281236zM380.083572 289.615845l47.020648 54.857423h130.607687l-44.403166-65.296007zM228.56737 394.111399s75.750264-5.219292 96.658779 31.347098l13.056067-10.454257-28.729616-70.530972-78.367747-13.056067-2.617483 62.694198z" fill="#C0EAFF" />
//     //     <path d="M788.881086 627.051689h-189.179741a15.673549 15.673549 0 0 1 0-31.347099h189.179741a26.174827 26.174827 0 0 0 18.134297-44.983086l-116.79929-112.42637H333.940643a15.673549 15.673549 0 0 1-15.67355-15.673549v-12.852311a64.998209 64.998209 0 0 0-28.03998-53.885662 64.888494 64.888494 0 0 0-49.904581-10.799076v211.436181l87.08224 39.183873h31.347099a15.673549 15.673549 0 0 1 0 31.347099h-34.716912c-2.225644 0-4.404267-0.470206-6.441828-1.379272l-99.385977-44.73231a15.704896 15.704896 0 0 1-9.23172-14.294277V333.203986c0-6.582891 4.122143-12.476145 10.313195-14.733137a95.922122 95.922122 0 0 1 88.916046 11.739489 95.906449 95.906449 0 0 1 41.362496 76.737697H696.532533c4.059449 0 7.94649 1.567355 10.86177 4.388594l121.344619 116.814964A57.694335 57.694335 0 0 1 846.371665 569.545436a57.553273 57.553273 0 0 1-57.490579 57.506253z" fill="#1F87DD" />
//     //     <path d="M490.346992 756.186062H348.893209a15.673549 15.673549 0 0 1-12.570187-25.030658l137.582416-184.587391a15.673549 15.673549 0 1 1 25.1247 18.729892l-118.915219 159.556732h102.80281l142.002357-173.098679a15.673549 15.673549 0 0 1 24.231308 19.874061l-146.704422 178.835198a15.642202 15.642202 0 0 1-12.09998 5.720845zM629.543783 432.480247a15.610855 15.610855 0 0 1-12.115653-5.736519l-104.667963-127.582691h-102.80281l52.94525 71.048199a15.673549 15.673549 0 1 1-25.1247 18.729891l-71.612447-96.078857a15.657876 15.657876 0 0 1 12.570187-25.030659h141.453783a15.673549 15.673549 0 0 1 12.115653 5.736519l109.370028 133.319211a15.657876 15.657876 0 0 1-12.131328 25.594906z" fill="#1F87DD" />
//     //     <path d="M553.13523 349.770927h-134.745504a15.673549 15.673549 0 0 1 0-31.347098h134.745504a15.673549 15.673549 0 0 1 0 31.347098zM532.634228 702.801953h-134.745504a15.673549 15.673549 0 0 1 0-31.347099h134.745504a15.673549 15.673549 0 0 1 0 31.347099zM480.504003 503.465752h-13.792724a15.673549 15.673549 0 0 1 0-31.347098h13.792724a15.673549 15.673549 0 0 1 0 31.347098zM569.984296 503.465752h-13.792724a15.673549 15.673549 0 0 1 0-31.347098h13.792724a15.673549 15.673549 0 0 1 0 31.347098zM391.039383 503.465752h-13.792724a15.673549 15.673549 0 0 1 0-31.347098h13.792724a15.673549 15.673549 0 0 1 0 31.347098zM757.424273 503.465752h-100.59284a15.673549 15.673549 0 0 1 0-31.347098h100.59284a15.673549 15.673549 0 0 1 0 31.347098z" fill="#1F87DD" />
//     // </svg>
//     // <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" className="icon-md"><path d="M9.64978 13.0257L6.36281 14.2164C5.32547 14.5922 4.17846 14.0599 3.8009 13.0274L3.45909 12.0927L4.0564 10.8177L1.75 7.41901L4.09784 6.56847L6.66195 8.05349C7.17468 8.35044 7.79343 8.40537 8.35086 8.20343L16.8625 5.11998C17.1541 5.01435 17.4664 4.97773 17.7746 5.01305L20.6083 5.33764C21.3056 5.41751 21.8977 5.88262 22.1377 6.53907C22.4878 7.49623 21.9919 8.55457 21.0303 8.90295L15.7542 10.8143M16.3515 9.53934L13 14.5L10.1826 15.5206L9.84014 11.8982" fill='rgb(226, 197, 65)' stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3 19H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"></path></svg>
//     <svg
//         xmlns="http://www.w3.org/2000/svg"
//         viewBox="0 0 24 24"
//         width="24"
//         height="24"
//         id="airplane-mode"
//     >
//         <path
//             fill="#61A0B5"
//             d="M22,13.5c0,0.5-0.5,1-1,1h-6.1l-4.7,5.2C10,19.9,9.8,20,9.5,20h-2c-0.3,0-0.7-0.2-0.8-0.5
//     c-0.2-0.3-0.2-0.6-0.1-0.9l1.7-4.1H6.5C4,14.5,2,12.5,2,10V5.5c0-0.4,0.3-0.8,0.7-0.9c0.4-0.1,0.8,0,1.1,0.3l2.6,3
//     c0.4,0.4,0.9,0.7,1.5,0.7h7.1C18.3,8.5,22,8.9,22,13.5z"
//         />
//         <path
//             fill="#96C0CE"
//             d="M14.9,8.5H8.3L6.6,4.4C6.5,4.1,6.5,3.7,6.7,3.5C6.8,3.2,7.2,3,7.5,3h2c0.3,0,0.5,0.1,0.7,0.3L14.9,8.5z"
//         />
//     </svg>

// )

// const WebIcon = () => (
//     // <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
//     //     <rect x="3" y="3" width="18" height="18" fill="#FF6347" />
//     // </svg>
//     // <svg width="24px" height="24px" viewBox="0 0 1024 1024" className="icon" version="1.1" xmlns="http://www.w3.org/2000/svg">
//     //     <path d="M704 832c0 14.08-11.52 25.6-25.6 25.6H409.6c-14.08 0-25.6-11.52-25.6-25.6l64-38.4v-76.8c0-14.08 11.52-25.6 25.6-25.6h140.8c14.08 0 25.6 11.52 25.6 25.6v76.8l64 38.4z" fill="#9C1E15" />
//     //     <path d="M678.4 870.4H409.6c-21.76 0-38.4-16.64-38.4-38.4v-7.68l64-38.4V716.8c0-21.76 16.64-38.4 38.4-38.4h140.8c21.76 0 38.4 16.64 38.4 38.4v69.12l64 38.4v7.68c0 21.76-16.64 38.4-38.4 38.4z m-280.32-32c2.56 3.84 6.4 6.4 11.52 6.4h268.8c5.12 0 8.96-2.56 11.52-6.4L627.2 801.28V716.8c0-7.68-5.12-12.8-12.8-12.8H473.6c-7.68 0-12.8 5.12-12.8 12.8v84.48l-62.72 37.12z" fill="#231C1C" />
//     //     <path d="M934.4 704c0 14.08-11.52 25.6-25.6 25.6H166.4c-14.08 0-25.6-11.52-25.6-25.6V230.4c0-14.08 11.52-25.6 25.6-25.6h742.4c14.08 0 25.6 11.52 25.6 25.6v473.6z" fill="#E24F32" />
//     //     <path d="M908.8 742.4H166.4c-21.76 0-38.4-16.64-38.4-38.4V230.4c0-21.76 16.64-38.4 38.4-38.4h742.4c21.76 0 38.4 16.64 38.4 38.4v473.6c0 21.76-16.64 38.4-38.4 38.4zM166.4 217.6c-7.68 0-12.8 5.12-12.8 12.8v473.6c0 7.68 5.12 12.8 12.8 12.8h742.4c7.68 0 12.8-5.12 12.8-12.8V230.4c0-7.68-5.12-12.8-12.8-12.8H166.4z" fill="#231C1C" />
//     //     <path d="M857.6 625.92c0 14.08-11.52 26.88-25.6 26.88H243.2c-14.08 0-25.6-11.52-25.6-26.88V308.48c0-14.08 11.52-26.88 25.6-26.88h588.8c14.08 0 25.6 11.52 25.6 26.88v317.44z" fill="#F2E5CA" />
//     //     <path d="M832 665.6H243.2c-21.76 0-38.4-17.92-38.4-39.68V308.48c0-21.76 17.92-39.68 38.4-39.68h588.8c21.76 0 38.4 17.92 38.4 39.68V627.2c0 20.48-17.92 38.4-38.4 38.4zM243.2 294.4c-7.68 0-12.8 6.4-12.8 14.08V627.2c0 7.68 6.4 14.08 12.8 14.08h588.8c7.68 0 12.8-6.4 12.8-14.08V308.48c0-7.68-6.4-14.08-12.8-14.08H243.2z" fill="#231C1C" />
//     // </svg>
//     <svg
//         xmlns="http://www.w3.org/2000/svg"
//         width="24"
//         height="24"
//         viewBox="0 0 32 32"
//         id="web"
//     >
//         <g color="#000">
//             <path
//                 fill="#f05542"
//                 d="M237 1579.362c-4.413 0-8 3.588-8 8 0 4.413 3.588 8.002 8 8.002s8-3.59 8-8.002c0-4.412-3.588-8-8-8zm-.5 1.102v2.648h-4.924c1.18-1.504 2.9-2.498 4.924-2.648zm1 0c2.024.15 3.745 1.144 4.924 2.648H237.5v-2.648zm-6.598 3.648h5.598v2.75h-6.398c.074-.999.352-1.912.8-2.75zm6.598 0h5.598c.448.838.726 1.751.8 2.75H237.5v-2.75zm-7.4 3.75h6.4v2.752h-5.598a6.844 6.844 0 0 1-.802-2.752zm7.4 0h6.4a6.843 6.843 0 0 1-.802 2.752H237.5v-2.752zm-5.924 3.752h4.924v2.649c-2.024-.15-3.745-1.145-4.924-2.649zm5.924 0h4.924c-1.18 1.504-2.9 2.498-4.924 2.649v-2.649z"
//                 transform="translate(-221 -1569.362)"
//             />
//             <path
//                 fill="#f05542"
//                 fillRule="evenodd"
//                 d="M233.957 1580.192c-1.938 4.773-2.26 9.333-.146 14.287l.92-.392c-2.014-4.722-1.72-8.91.152-13.518l-.926-.377zm6.03 0-.926.377c1.87 4.608 2.166 8.796.152 13.518l.92.392c2.113-4.954 1.792-9.514-.147-14.287z"
//                 transform="translate(-221 -1569.362)"
//             />
//             <path
//                 fill="#2b4255"
//                 d="M223.5 1571.362a.5.5 0 0 0-.5.5v27a.5.5 0 0 0 .5.5h27a.5.5 0 0 0 .5-.5v-14.615a.5.5 0 1 0-1 0v14.115h-26v-26h26v7.305a.5.5 0 1 0 1 0v-7.805a.5.5 0 0 0-.5-.5h-27zm26.992 9.598a.5.5 0 0 0-.492.508v.888a.5.5 0 1 0 1 0v-.888a.5.5 0 0 0-.508-.508z"
//                 transform="translate(-221 -1569.362)"
//             />
//             <path
//                 fill="#2b4255"
//                 fillRule="evenodd"
//                 d="M223.5 1575.362v1h27v-1h-27z"
//                 transform="translate(-221 -1569.362)"
//             />
//             <path
//                 fill="#f05542"
//                 d="M226 1573.863a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5zm2 0a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5zm2 0a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5.5.5 0 0 1 .5.5z"
//                 transform="translate(-221 -1569.362)"
//             />
//         </g>
//     </svg>


// )

// const OutfitIcon = () => (
//     // <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
//     //     <path d="M12 2C10 2 8 3 8 5H16C16 3 14 2 12 2ZM10 6H14V18H10V6Z" fill="#8A2BE2" />
//     // </svg>
//     // <svg fill="#000000" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
//     //     <g data-name="Layer 2" id="Layer_2">
//     //         <path d="M14,5a2,2,0,0,1-4,0V2H3V22H21V2H14ZM5,20V18H19v2ZM16,5V4h3V16H5V4H8V5a4,4,0,0,0,8,0Z" />
//     //         <rect height="2" width="2" x="11" y="13" />
//     //         <rect height="2" width="2" x="11" y="10" />
//     //     </g>
//     // </svg>
//     <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" id="dart-arrow">
//         <path fill="#40596b" d="M15.739 5.471l.87.73-1.579 1.883-.87-.731z"></path>
//         <path fill="#40596b" d="M15.64 4.141l2.073 1.742-.69.822-2.073-1.742zM3.957 7.17l-.87.731-1.579-1.883.87-.73z"></path>
//         <path fill="#40596b" d="M3.944 5.045.87 7.31.179 6.094l2.073-1.742zM8.395 2.745h1.355v1.825H8.395z"></path>
//         <path fill="#40596b" d="M7.353 1.831h3.258v1.199H7.353z"></path>
//         <circle cx="9.065" cy="13.105" r="9.065" fill="#40596b" transform="rotate(-79.146 9.065 13.105)"></circle>
//         <circle cx="9.065" cy="13.105" r="7.633" fill="#fdfdfd" transform="rotate(-79.141 9.065 13.105)"></circle>
//         <circle cx="9.065" cy="13.105" r="5.755" fill="#ff7058" transform="rotate(-58.46 9.065 13.105)"></circle>
//         <path fill="#fdfdfd" d="M13.286 13.105c0 2.32-1.88 4.21-4.21 4.21s-4.21-1.88-4.21-4.21 1.88-4.21 4.21-4.21 4.21 1.88 4.21 4.21z"></path>
//         <path fill="#ff7058" d="M10.943 13.105a1.876 1.876 0 1 1-1.876-1.876c1.037 0 1.876.84 1.876 1.876z"></path>
//         <g fill="#40596b">
//             <path d="M9.013 5.794h.272v.907h-.272zM5.345 6.898l.234-.135.448.777-.234.135zM2.687 9.69l.135-.234.777.448-.135.234zM1.765 13.615v-.272h.907v.272zM2.83 17.485l-.135-.234.777-.448.135.234zM5.593 20.268l-.234-.135.448-.777.234.135zM9.262 21.147h-.272v-.907h.272zM12.928 20.043l-.234.135-.448-.777.234-.135zM15.585 17.28l-.135.234-.777-.448.135-.234zM16.472 13.355v.272h-.907v-.272zM15.356 9.486l.135.234-.777.448-.135-.234zM12.593 6.722l.234.135-.448.777-.234-.135z"></path>
//         </g>
//         <path fill="#ffd15c" d="M20.23 14.52l-.088-.103-.874-.867H9.869a.469.469 0 0 1-.469-.469c0-.259.21-.469.469-.469h9.493c.314-.27.615-.576.897-.912l.026-.031h4.469l-1.73 1.56h-3.354v.179h3.354l1.73 1.618H20.23z"></path>
//     </svg>


// )

// const StudyIcon = () => (
//     // <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
//     //     <path d="M12 2L4 8V18L12 22L20 18V8L12 2Z" fill="#00BFFF" />
//     // </svg>
//     // <svg width="24" height="24" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg">
//     //     <g id="icomoon-ignore">
//     //     </g>
//     //     <path d="M31.514 11.177l-15.514-7.467-15.514 7.467 2.186 1.318v11.529h1.066v-10.886l3.199 1.929v13.223h18.126v-13.219l6.451-3.894zM16 4.893l13.275 6.39-13.267 8.008-13.282-8.009 13.274-6.39zM23.997 27.224h-15.994v-11.514l8.005 4.827 7.989-4.823v11.51z" fill="#000000">

//     //     </path>
//     // </svg>
//     // <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" className="icon-md" ><path d="M3 6H10" stroke="currentColor" stroke-width="2" stroke-linecap="round"></path><path d="M3 10H7" stroke="currentColor" stroke-width="2" stroke-linecap="round"></path><path d="M13.4282 17.5718L20.5 10.5C21.6046 9.39543 21.6046 7.60457 20.5 6.5C19.3954 5.39543 17.6046 5.39543 16.5 6.5L9.42819 13.5718C9.14899 13.851 8.95868 14.2066 8.88124 14.5938L8 19L12.4062 18.1188C12.7934 18.0413 13.149 17.851 13.4282 17.5718Z" fill='rgb(203, 139, 208)' stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg>
//     <svg xmlns="http://www.w3.org/2000/svg" xmlSpace="preserve" enableBackground="new 0 0 64 64" viewBox="0 0 64 64" width="24" height="24">
//         <linearGradient id="a" x1="32" x2="32" y1="27.445" y2="60.311" gradientUnits="userSpaceOnUse">
//             <stop offset="0" stopColor="#ffb9a4" />
//             <stop offset="1" stopColor="#ef7337" />
//         </linearGradient>
//         <path fill="url(#a)" d="M5.9,23.9c-0.3,0-0.5,0-0.7,0.1c-1.8,0.4-3.2,2-3.2,4v28.4c0,2.2,1.8,4.1,4,4.1h10h42c2.2,0,4-1.8,4-4.1V27.9
//       c0-1.7-1.1-3.2-2.6-3.8c-0.4-0.2-0.8-0.2-1.3-0.2L5.9,23.9z" />
//         <linearGradient id="b" x1="50.717" x2="21.913" y1="35.904" y2="51.991" gradientUnits="userSpaceOnUse">
//             <stop offset="0" stopColor="#ffb9a4" />
//             <stop offset="1" stopColor="#ef7337" />
//         </linearGradient>
//         <path fill="url(#b)" d="M32,41.2v19.2c0,0,9.2-4.7,24-5.1c1.1,0,2-1,2-2.1V20.8c0-1.2-1-2.2-2.2-2.1C41.1,19.1,32,23.7,32,23.7V37" />
//         <linearGradient id="c" x1="33.176" x2="4.372" y1="35.904" y2="51.991" gradientTransform="matrix(-1 0 0 1 46.5 0)" gradientUnits="userSpaceOnUse">
//             <stop offset="0" stopColor="#ffb9a4" />
//             <stop offset="1" stopColor="#ef7337" />
//         </linearGradient>
//         <path fill="url(#c)" d="M8.1,18.6C22.9,19.1,32,23.7,32,23.7v36.7c0,0-9.2-4.7-24-5.1c-1.1,0-2-1-2-2.1V20.8
//       C6,19.6,6.9,18.6,8.1,18.6z" />
//         <path fill="#fff" d="M55.9 18.6C41.1 19.1 32 23.7 32 23.7v2.6c0 0 9.1-4.6 23.9-5.1 1.2 0 2.2.9 2.2 2.1v-2.6C58.1 19.6 57.1 18.6 55.9 18.6zM8.1 18.6c-1.2 0-2.2.9-2.2 2.1v2.6c0-1.2 1-2.2 2.2-2.1C22.9 21.7 32 26.3 32 26.3v-2.6C32 23.7 22.9 19.1 8.1 18.6z" opacity=".8" />
//         <g>
//             <linearGradient id="d" x1="21.5" x2="42.5" y1="23.75" y2="23.75" gradientUnits="userSpaceOnUse">
//                 <stop offset="0" stopColor="#fff383" />
//                 <stop offset="1" stopColor="#fcee21" />
//             </linearGradient>
//             <path fill="url(#d)" d="M42.5,21.3c0-6.2-5.4-11.2-11.7-10.5c-4.7,0.5-8.5,4.3-9.2,8.9c-0.6,4,1.1,7.7,4,9.9c1.4,1.1,2.4,2.8,2.4,4.6
//         v0c0,1.3,1.1,2.4,2.4,2.4h3.2c1.3,0,2.4-1.1,2.4-2.4v0c0-1.8,0.9-3.5,2.3-4.6C40.9,27.8,42.5,24.7,42.5,21.3z" />
//             <path fill="#f4b33b" d="M42,22.8c0,0-2,5-10,5s-10-5-10-5l0.4,2.8c0.7,1.7,1.8,3.1,3.2,4.2c1.4,1.1,2.4,2.8,2.4,4.6v0
//         c0,1.3,1.1,2.4,2.4,2.4h3.2c1.3,0,2.4-1.1,2.4-2.4v0c0-1.8,0.9-3.5,2.3-4.6c1.4-1.1,2.5-2.6,3.3-4.2L42,22.8z" opacity=".4" />
//             <ellipse cx="32" cy="15.3" fill="#fff5b0" rx="5" ry="2.5" />
//         </g>
//         <g>
//             {/* Additional paths omitted for brevity */}
//         </g>
//     </svg>
// )

// const RelaxIcon = () => (
//     // <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
//     //     <circle cx="12" cy="12" r="10" fill="#3CB371" />
//     // </svg>
//     // <svg width="24px" height="24px" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
//     //     <g>
//     //         <path className="fill:#DFDFDF;" d="M62.37,163.185L31.023,142.27V98.357c0-22.45,18.265-40.715,40.715-40.715s40.715,18.265,40.715,40.715v10.732H81.107V98.357c0-5.165-4.203-9.369-9.369-9.369s-9.369,4.203-9.369,9.369C62.37,98.357,62.37,163.185,62.37,163.185z" />
//     //         <rect x="58.867" y="385.772" transform="matrix(-0.9659 -0.2589 0.2589 -0.9659 38.1649 842.2181)" className="fill:#DFDFDF;" width="31.347" height="65.648" />
//     //     </g>
//     //     <rect x="404.606" y="402.899" transform="matrix(-0.2588 -0.9659 0.9659 -0.2588 146.3279 949.4272)" className="fill:#C1C1C1;" width="65.646" height="31.346" />
//     //     <path className="fill:#DFDFDF;" d="M256,416.904h131.565c54.366,0,98.439-44.074,98.439-98.44v-91.721l-250.919-20.915L256,416.904z" />
//     //     <g>
//     //         <path className="fill:#F1F1F1;" d="M25.996,226.743v91.721c0,54.366,44.073,98.44,98.439,98.44H256V205.828L25.996,226.743z" />
//     //         <path className="fill:#F1F1F1;" d="M387.565,378.679v-31.347c15.918,0,28.867-12.95,28.867-28.868v-37.823h31.347v37.823C447.78,351.667,420.767,378.679,387.565,378.679z" />
//     //     </g>
//     //     <g>
//     //         <rect x="31.023" y="142.274" className="fill:#288FD9;" width="73.582" height="59.245" />
//     //         <polygon className="fill:#288FD9;" points="256,184.507 235.085,205.833 256,226.743 486.004,226.743 512,226.743 512,184.507" />
//     //     </g>
//     //     <polygon className="fill:#8BCBF1;" points="256,184.507 0,184.507 0,226.743 25.996,226.743 256,226.743" />
//     // </svg>
//     <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" id="yoga-pose">
//         <g>
//             <path fill="#db5669" d="M19.25,14.08l-2.52,0.84L16,13V18.5H8V13l-0.72,1.93L4.75,14.08l0.7-2.3a3,3,0,0,1,2.36-2.08c3.25-0.55,1.94-0.46,5.67-0.46l2.69,0.45a3,3,0,0,1,2.38,2.09C19.31,14.31,19.18,13.88,19.25,14.08Z"></path>
//             <path fill="#f26674" d="M19.25,14.08l-2.52,0.84L16,13v5.5h-6a1,1,0,0,1-1-1v-3.88a0.69,0.69,0,0,0-.5-0.35c-0.46,1.24-0.37,1-0.5,1.3a2.09,2.09,0,0,1-1.21-2.54,3.45,3.45,0,0,1,1-1.85l0.5-0.22c3.26-0.55,1.95-0.46,5.67-0.46l2.69,0.45a3,3,0,0,1,2.38,2.09C19.31,14.31,19.18,13.88,19.25,14.08Z"></path>
//             <path fill="#f6ccaf" d="M13.5,8.1c0,0.83,0.09,1.36-0.38,1.89a1.5,1.5,0,0,1-2.26-1.5v-0.91Z"></path>
//             <path fill="#ffdec7" d="M13.5,8.1c0,0.83,0.09,1.36-0.38,1.89A1.5,1.5,0,0,1,11.5,8.5v-0.4Z"></path>
//             <path fill="#f6ccaf" d="M15,3.5c0,1.82,0.26,3.29-1.18,4.39a3,3,0,0,1-4.82-2.78V3.5A3,3,0,0,1,15,3.5Z"></path>
//             <path fill="#ffdec7" d="M15,3.5c0,1.82,0.26,3.29-1.18,4.39A3,3,0,0,1,10,5c0-1.82-0.26-3.29,1.18-4.39A3,3,0,0,1,15,3.5Z"></path>
//             <path fill="#a87e6b" d="M15,3.5V4c-1.18,0-2.36,0.14-3.5-1-0.56,1.13-1.64,1-2.5,1V3.5A3,3,0,0,1,15,3.5Z"></path>
//             <path fill="#be927c" d="M15,3.5V4c-1.18,0-2.36,0.14-3.5-1a1.78,1.78,0,0,1-1.5,1V3.5a3,3,0,0,1,2.5-2.95A3,3,0,0,1,15,3.5Z"></path>
//             <path fill="#f6ccaf" d="M16,20.5v3H8.56a1.06,1.06,0,0,1-.13-2.11C11.16,21,3.33,22,16,20.5Z"></path>
//             <path fill="#ffdec7" d="M16,20.5v2H9.56A1.06,1.06,0,0,1,8.5,21.38Z"></path>
//             <path fill="#6fabe6" d="M18.85,23.5H16v-3c2.76-0.31,2.87-0.39,3.41-0.21h0a1.65,1.65,0,0,1-.56,3.21ZM8.56,23.5c-3.5,0-3.94,0.15-4.58-0.5a1.65,1.65,0,0,1,1.21-2.21c0.5-0.18,0.15-0.16,7.4,0.68L8.56,21a1.06,1.06,0,0,0-.13,2.11Z"></path>
//             <path fill="#82bcf4" d="M12,21l-3.56,0.41a1.07,1.07,0,0,0-0.31,0.54c0,0.08,0.16,0.06-1.35,0.06a1.65,1.65,0,0,1-1.55-2.2C5.14,20.11,4.9,20.16,12,21ZM19.5,20.85a1.65,1.65,0,0,1-1.65,1.65H16v-3c2.76-0.31,2.87-0.39,3.41-0.21A1.77,1.77,0,0,1,19.5,20.85Z"></path>
//             <path fill="#6fabe6" d="M19,20.21c-0.21-0.03,0.22-0.06-7,0.77c-0.05,0,0.07,0-6.66-0.77-0.4-0.03-1,.39,2.66-1.71H16Z"></path>
//             <path fill="#82bcf4" d="M18.37,19.86C12.86,20.5,13,20.5,13,20.5L8.5,19.9a0.5,0.5,0,0,1-.19-0.93l0.94-0.93H16Z"></path>
//             <path fill="#f6ccaf" d="M7.28,14.93c-0.74,2-0.8,2.31-1.24,2.82C3.5,20.83,3.6,20.75,3.25,20.89a1.25,1.25,0,0,1-1.41-2C5.23,16.73,4.12,17.2,5.41,14.93C5.9,14.46,5.33,14.28,7.28,14.93Z"></path>
//             <path fill="#ffdec7" d="M7.28,14.93c-0.74,2-0.8,2.31-1.24,2.82C3.5,20.83,3.6,20.75,3.25,20.89a1.28,1.28,0,0,1-.41-2C5.25,16.79,4.15,17.29,5.33,13.5Z"></path>
//             <path fill="#f6ccaf" d="M21.25,21a1.26,1.26,0,0,1-.91-0.5C18,18.83,18.9,19.17,17.95,14.93l2.52-0.84c0.79,2.59,0.17,1.5,2.91,4.8A1.27,1.27,0,0,1,21.25,21Z"></path>
//             <path fill="#ffdec7" d="M21.75,20.89a1.13,1.13,0,0,1-.46-0.34C18.18,16.83,18.9,19.17,17.55,14.65l1.7-0.56c0.79,2.59,0.17,1.5,2.91,4.8A1.28,1.28,0,0,1,21.75,20.89Z"></path>
//         </g>
//     </svg>



// )


// const OpeningContainer: React.FC<OpeningContainerProps> = ({ onQuestionClick, containerQues }) => {

//     const icons = [
//         // { icon: <PlaneIcon />, text: 'Plan a relaxing day' },
//         // { icon: <WebIcon />, text: 'Make me a personal webpage' },
//         // { icon: <OutfitIcon />, text: 'Pick outfit to look good on camera' },
//         // { icon: <StudyIcon />, text: 'Study vocabulary' },
//         // { icon: <RelaxIcon />, text: 'Organize my workspace' }
//         <PlaneIcon />,
//         <WebIcon />,
//         <OutfitIcon />,
//         <StudyIcon />,
//         <RelaxIcon />
//     ]
//     return (
//         <div className="opening-container">
//             {/* <div className="questions-grid">
//                 {containerQues.map((question, index) => (
//                     <div key={index} className="question-item" onClick={() => onQuestionClick(question.question)}>
//                         <div className="icon">{icons[index]}</div>
//                         <div className="text">{question.question}</div>
//                     </div>
//                 ))}
//             </div> */}
//             <div className="questions-grid">
//                 {containerQues && containerQues.length > 0 ? (
//                     containerQues.map((question, index) => (
//                         <div key={index} className="question-item" onClick={() => onQuestionClick(question.question)}>
//                             <div className="icon">{icons[index]}</div>
//                             <div className="text">{question.question}</div>
//                         </div>
//                     ))
//                 ) : (
//                     <div>No questions available</div>
//                 )}
//             </div>
//         </div>
//     )
// }

// export default OpeningContainer 
