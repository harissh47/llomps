import { useTranslation } from 'react-i18next'
import { useRouter } from 'next/navigation'
import { useContext, useContextSelector } from 'use-context-selector'
import cn from 'classnames'
import React, { useCallback, useState } from 'react'
import AppIcon from '../base/app-icon'
import SwitchAppModal from '../app/switch-app-modal'
import s from './style.module.css'
import {
  PortalToFollowElem,
  PortalToFollowElemContent,
  PortalToFollowElemTrigger,
} from '@/app/components/base/portal-to-follow-elem'
import { ChevronDown } from '@/app/components/base/icons/src/vender/line/arrows'
import Divider from '@/app/components/base/divider'
import Confirm from '@/app/components/base/confirm'
import { useStore as useAppStore } from '@/app/components/app/store'
import { ToastContext } from '@/app/components/base/toast'
import AppsContext from '@/context/app-context'
import { useProviderContext } from '@/context/provider-context'
import { copyApp, deleteApp, exportAppConfig, updateAppInfo } from '@/service/apps'
import DuplicateAppModal from '@/app/components/app/duplicate-modal'
import type { DuplicateAppModalProps } from '@/app/components/app/duplicate-modal'
import CreateAppModal from '@/app/components/explore/create-app-modal'
import { AiText, ChatBot, CuteRobote } from '@/app/components/base/icons/src/vender/solid/communication'
import { Route } from '@/app/components/base/icons/src/vender/solid/mapsAndTravel'
import type { CreateAppModalProps } from '@/app/components/explore/create-app-modal'
import { NEED_REFRESH_APP_LIST_KEY } from '@/config'
import { getRedirection } from '@/utils/app-redirection'
import { Edit02, Trash03 } from '../base/icons/src/vender/line/general'

export type IAppInfoProps = {
  expand: boolean
}

const AppInfo = ({ expand }: IAppInfoProps) => {
  const { t } = useTranslation()
  const { notify } = useContext(ToastContext)
  const { replace } = useRouter()
  const { onPlanInfoChanged } = useProviderContext()
  const appDetail = useAppStore(state => state.appDetail)
  const setAppDetail = useAppStore(state => state.setAppDetail)
  const [open, setOpen] = useState(false)
  const [showEditModal, setShowEditModal] = useState(false)
  const [showDuplicateModal, setShowDuplicateModal] = useState(false)
  const [showConfirmDelete, setShowConfirmDelete] = useState(false)
  const [showSwitchTip, setShowSwitchTip] = useState<string>('')
  const [showSwitchModal, setShowSwitchModal] = useState<boolean>(false)

  const mutateApps = useContextSelector(
    AppsContext,
    state => state.mutateApps,
  )

  const onEdit: CreateAppModalProps['onConfirm'] = useCallback(async ({
    name,
    icon,
    icon_background,
    description,
  }) => {
    if (!appDetail)
      return
    try {
      const app = await updateAppInfo({
        appID: appDetail.id,
        name,
        icon,
        icon_background,
        description,
      })
      setShowEditModal(false)
      notify({
        type: 'success',
        message: t('app.editDone'),
      })
      setAppDetail(app)
      mutateApps()
    }
    catch (e) {
      notify({ type: 'error', message: t('app.editFailed') })
    }
  }, [appDetail, mutateApps, notify, setAppDetail, t])

  const onCopy: DuplicateAppModalProps['onConfirm'] = async ({ name, icon, icon_background }) => {
    if (!appDetail)
      return
    try {
      const newApp = await copyApp({
        appID: appDetail.id,
        name,
        icon,
        icon_background,
        mode: appDetail.mode,
      })
      setShowDuplicateModal(false)
      notify({
        type: 'success',
        message: t('app.newApp.appCreated'),
      })
      localStorage.setItem(NEED_REFRESH_APP_LIST_KEY, '1')
      mutateApps()
      onPlanInfoChanged()
      getRedirection(true, newApp, replace)
    }
    catch (e) {
      notify({ type: 'error', message: t('app.newApp.appCreateFailed') })
    }
  }

  const onExport = async () => {
    if (!appDetail)
      return
    try {
      const { data } = await exportAppConfig(appDetail.id)
      const a = document.createElement('a')
      const file = new Blob([data], { type: 'application/yaml' })
      a.href = URL.createObjectURL(file)
      a.download = `${appDetail.name}.yml`
      a.click()
    }
    catch (e) {
      notify({ type: 'error', message: t('app.exportFailed') })
    }
  }

  const onConfirmDelete = useCallback(async () => {
    if (!appDetail)
      return
    try {
      await deleteApp(appDetail.id)
      notify({ type: 'success', message: t('app.appDeleted') })
      mutateApps()
      onPlanInfoChanged()
      setAppDetail()
      replace('/apps')
    }
    catch (e: any) {
      notify({
        type: 'error',
        message: `${t('app.appDeleteFailed')}${'message' in e ? `: ${e.message}` : ''}`,
      })
    }
    setShowConfirmDelete(false)
  }, [appDetail, mutateApps, notify, onPlanInfoChanged, replace, t])

  const DuplicateIcon = () => (
    <svg width="1rem" height="1rem" viewBox="0 0 32 32" fill="#000000" xmlns="http://www.w3.org/2000/svg">
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
      <g id="SVGRepo_iconCarrier">
        <g id="Page-1" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
          <g id="Icon-Set" transform="translate(-204.000000, -931.000000)" fill="#000000" >
            <path d="M234,951 C234,952.104 233.104,953 232,953 L216,953 C214.896,953 214,952.104 214,951 L214,935 C214,933.896 214.896,933 216,933 L232,933 C233.104,933 234,933.896 234,935 L234,951 L234,951 Z M232,931 L216,931 C213.791,931 212,932.791 212,935 L212,951 C212,953.209 213.791,955 216,955 L232,955 C234.209,955 236,953.209 236,951 L236,935 C236,932.791 234.209,931 232,931 L232,931 Z M226,959 C226,960.104 225.104,961 224,961 L208,961 C206.896,961 206,960.104 206,959 L206,943 C206,941.896 206.896,941 208,941 L210,941 L210,939 L208,939 C205.791,939 204,940.791 204,943 L204,959 C204,961.209 205.791,963 208,963 L224,963 C226.209,963 228,961.209 228,959 L228,957 L226,957 L226,959 L226,959 Z" id="duplicate"></path>
          </g>
        </g>
      </g>
    </svg>
  )

  const ExportIcon = () => (
    <svg width="1rem" height="1rem" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" >
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
      <g id="SVGRepo_iconCarrier">
        <path d="M16.44 8.8999C20.04 9.2099 21.51 11.0599 21.51 15.1099V15.2399C21.51 19.7099 19.72 21.4999 15.25 21.4999H8.73998C4.26998 21.4999 2.47998 19.7099 2.47998 15.2399V15.1099C2.47998 11.0899 3.92998 9.2399 7.46998 8.9099" stroke="#292D32" strokeWidth="1.656" strokeLinecap="round" strokeLinejoin="round" ></path>
        <path d="M12 15.0001V3.62012" stroke="#292D32" strokeWidth="1.656" strokeLinecap="round" strokeLinejoin="round" ></path>
        <path d="M15.35 5.85L12 2.5L8.65002 5.85" stroke="#292D32" strokeWidth="1.656" strokeLinecap="round" strokeLinejoin="round" ></path>
      </g>
    </svg>
  )

  const SwitchIcon = () => (
    <svg width="1rem" height="1rem" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <g id="SVGRepo_bgCarrier" strokeWidth="0"></g>
      <g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round"></g>
      <g id="SVGRepo_iconCarrier">
        <path d="M18.7153 1.71609C18.3241 1.32351 18.3241 0.687013 18.7153 0.294434C19.1066 -0.0981448 19.7409 -0.0981448 20.1321 0.294434L22.4038 2.57397L22.417 2.58733C23.1935 3.37241 23.1917 4.64056 22.4116 5.42342L20.1371 7.70575C19.7461 8.09808 19.1122 8.09808 18.7213 7.70575C18.3303 7.31342 18.3303 6.67733 18.7213 6.285L20.0018 5L4.99998 5C4.4477 5 3.99998 5.44772 3.99998 6V13C3.99998 13.5523 3.55227 14 2.99998 14C2.4477 14 1.99998 13.5523 1.99998 13V6C1.99998 4.34315 3.34313 3 4.99998 3H19.9948L18.7153 1.71609Z" fill="#0F0F0F" />
        <path d="M22 11C22 10.4477 21.5523 10 21 10C20.4477 10 20 10.4477 20 11V18C20 18.5523 19.5523 19 19 19L4.00264 19L5.28213 17.7161C5.67335 17.3235 5.67335 16.687 5.28212 16.2944C4.8909 15.9019 4.2566 15.9019 3.86537 16.2944L1.59369 18.574L1.58051 18.5873C0.803938 19.3724 0.805727 20.6406 1.58588 21.4234L3.86035 23.7058C4.25133 24.0981 4.88523 24.0981 5.2762 23.7058C5.66718 23.3134 5.66718 22.6773 5.2762 22.285L3.99563 21L19 21C20.6568 21 22 19.6569 22 18L22 11Z" fill="#0F0F0F" />
      </g>
    </svg>
  )

  if (!appDetail)
    return null
const AgentIcon=()=>(
  <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="156" height="256">
<path d="M0 0 C1.28065086 -0.01496269 1.28065086 -0.01496269 2.58717346 -0.03022766 C3.99526779 -0.03122467 3.99526779 -0.03122467 5.43180847 -0.03224182 C6.41893326 -0.04056534 7.40605804 -0.04888885 8.4230957 -0.0574646 C11.69972126 -0.08164059 14.97614799 -0.09034645 18.25285339 -0.09693909 C20.52488263 -0.10590035 22.79691124 -0.11502209 25.06893921 -0.1242981 C29.83802222 -0.14081182 34.60703484 -0.14849242 39.37614441 -0.15138245 C45.48982677 -0.15676555 51.60284817 -0.19443311 57.71634388 -0.24012661 C62.41150328 -0.26985906 67.1065029 -0.2771052 71.80174828 -0.2781086 C74.0556357 -0.28231924 76.30952324 -0.29478714 78.56331825 -0.31562614 C81.716591 -0.34245763 84.86832392 -0.3377387 88.02165222 -0.32521057 C88.95430908 -0.34004486 89.88696594 -0.35487915 90.84788513 -0.37016296 C95.14113014 -0.32154732 97.34291145 -0.10589661 101.00007629 2.29916382 C103.43319542 6.06775565 103.61884843 9.12546813 103.55192566 13.47337341 C103.56265862 14.69137131 103.56265862 14.69137131 103.5736084 15.93397522 C103.59047791 18.61044567 103.57110412 21.28523693 103.54972839 23.96165466 C103.55055726 25.8258325 103.5530173 27.69001027 103.55703735 29.55418396 C103.55989415 33.45813538 103.54520581 37.3615127 103.51774597 41.2653656 C103.48366333 46.26584905 103.48968248 51.26530604 103.50840855 56.26583862 C103.51898451 60.11437004 103.51003531 63.96266321 103.49502373 67.81117249 C103.48984583 69.65473218 103.49031896 71.4983168 103.49656868 73.34187317 C103.50202815 75.92010365 103.48162351 78.4968721 103.45426941 81.07493591 C103.46405823 82.21438156 103.46405823 82.21438156 103.4740448 83.37684631 C103.40861314 87.00948184 103.018813 89.11754946 101.07498169 92.22410583 C97.78012306 95.35972366 95.09193004 95.39325996 90.73332214 95.33665466 C89.38174011 95.32311951 89.38174011 95.32311951 88.00285339 95.30931091 C87.31578308 95.29770935 86.62871277 95.28610779 85.92082214 95.27415466 C85.93129578 95.83924744 85.94176941 96.40434021 85.95256042 96.98655701 C85.99407003 99.54071119 86.02013174 102.09479448 86.04582214 104.64915466 C86.06257996 105.53860779 86.07933777 106.42806091 86.09660339 107.34446716 C86.10304871 108.19524841 86.10949402 109.04602966 86.11613464 109.92259216 C86.12660828 110.70811462 86.13708191 111.49363708 86.14787292 112.30296326 C85.92082214 114.27415466 85.92082214 114.27415466 83.92082214 116.27415466 C78.54904073 116.16034573 75.79912366 113.85327771 72.17082214 110.21165466 C71.12619374 109.21060706 70.0792842 108.21193491 69.03019714 107.21556091 C68.51134949 106.71943298 67.99250183 106.22330505 67.45793152 105.71214294 C65.19102453 103.59141833 62.82649469 101.60999131 60.42082214 99.64915466 C59.26066589 98.70169373 59.26066589 98.70169373 58.07707214 97.73509216 C55.9650926 96.3041495 54.4156546 95.69374012 51.92082214 95.27415466 C51.96722839 95.91739685 52.01363464 96.56063904 52.06144714 97.22337341 C52.48268501 107.76936429 50.17544587 118.32861439 42.92082214 126.27415466 C37.98533827 129.27415466 37.98533827 129.27415466 34.92082214 129.27415466 C34.83832214 130.57352966 34.75582214 131.87290466 34.67082214 133.21165466 C33.62785197 142.2037489 29.53696833 149.16387076 22.92082214 155.27415466 C19.7400605 157.5921419 16.43680646 159.51616251 12.92082214 161.27415466 C14.13769714 161.64540466 15.35457214 162.01665466 16.60832214 162.39915466 C21.22507009 164.13761037 23.26451898 166.12368097 25.92082214 170.27415466 C26.23332214 173.14915466 26.23332214 173.14915466 25.92082214 175.27415466 C26.47769714 175.19294373 27.03457214 175.11173279 27.60832214 175.02806091 C32.35156411 174.63546149 35.37500766 175.03241539 39.17082214 178.02415466 C49.43412584 188.14462908 52.0659991 206.5655268 52.17082214 220.33665466 C52.20175964 221.35855896 52.20175964 221.35855896 52.23332214 222.40110779 C52.26957675 227.1187388 51.34773761 230.24768128 48.92082214 234.27415466 C47.92082214 235.27415466 47.92082214 235.27415466 45.35832214 235.77415466 C39.29690135 234.89249346 35.82511596 230.60340668 32.06535339 226.00462341 C27.54827044 219.83227386 24.16241195 213.18479667 20.92082214 206.27415466 C18.60211432 209.26535781 16.59090147 212.36439355 14.60832214 215.58665466 C3.88139882 232.43686339 -12.55953987 243.06276341 -31.96980286 247.64915466 C-53.55222831 251.41377992 -73.363152 246.50975991 -91.14558411 234.14134216 C-100.95716197 226.52679355 -108.09910362 217.08519084 -114.07917786 206.27415466 C-114.61284973 207.37372498 -115.14652161 208.47329529 -115.69636536 209.60618591 C-126.31848362 230.89380755 -126.31848362 230.89380755 -135.07917786 235.27415466 C-137.41216446 235.31437857 -139.74624451 235.31735713 -142.07917786 235.27415466 C-145.13895291 230.18535105 -145.59084501 226.23079984 -145.51667786 220.46165466 C-145.50910461 219.63141785 -145.50153137 218.80118103 -145.49372864 217.94578552 C-145.118137 203.51566464 -141.33224072 189.95896419 -132.82917786 178.14915466 C-129.89578961 176.14911722 -128.39685652 175.92566787 -124.95417786 175.46165466 C-122.33498481 175.14931305 -122.33498481 175.14931305 -120.07917786 174.27415466 C-118.87530502 172.29415867 -118.4136553 170.48565162 -117.84480286 168.24681091 C-116.88849893 165.78286456 -115.91449935 165.13063497 -113.64167786 163.83665466 C-111.00972632 162.68228996 -108.83313811 161.89757863 -106.07917786 161.27415466 C-107.21355286 160.79977966 -108.34792786 160.32540466 -109.51667786 159.83665466 C-117.17032345 155.97584588 -123.32227728 149.64304433 -126.43855286 141.62571716 C-127.54661853 137.55830536 -127.90376657 133.47525508 -128.07917786 129.27415466 C-129.13105286 129.06790466 -130.18292786 128.86165466 -131.26667786 128.64915466 C-135.51432558 127.40740281 -137.80433152 124.98947464 -140.07917786 121.27415466 C-146.19261764 109.58245838 -147.32346951 95.27022481 -143.45417786 82.58665466 C-141.26863924 76.99880593 -138.33349453 72.19369301 -133.07917786 69.09446716 C-131.07917786 68.27415466 -131.07917786 68.27415466 -128.07917786 68.27415466 C-128.18230286 67.36665466 -128.28542786 66.45915466 -128.39167786 65.52415466 C-128.37591235 57.76752606 -124.15386963 49.36497022 -118.87605286 43.80149841 C-110.37190122 36.57296952 -101.85906926 33.9519432 -90.9309845 34.04710388 C-90.04238739 34.04681183 -89.15379028 34.04651978 -88.23826599 34.04621887 C-85.32185357 34.04760433 -82.40570151 34.06312849 -79.48933411 34.07884216 C-77.45909769 34.08257508 -75.42885947 34.08542074 -73.39862061 34.0874176 C-68.07049026 34.0950321 -62.74246998 34.11466181 -57.41438293 34.13682556 C-51.97128284 34.15733109 -46.52816487 34.16642937 -41.08503723 34.17649841 C-30.41636924 34.19790979 -19.74778272 34.23201931 -9.07917786 34.27415466 C-9.10274353 33.08656555 -9.10274353 33.08656555 -9.12678528 31.87498474 C-9.18924484 28.27894771 -9.22820421 24.68302496 -9.26667786 21.08665466 C-9.29181458 19.84077576 -9.31695129 18.59489685 -9.34284973 17.31126404 C-9.35735168 15.50818787 -9.35735168 15.50818787 -9.37214661 13.66868591 C-9.39571228 12.01123352 -9.39571228 12.01123352 -9.41975403 10.32029724 C-8.77658849 4.56776933 -6.01873803 0.03762903 0 0 Z " fill="#BED8EE" transform="translate(149.0791778564453,3.7258453369140625)"/>
<path d="M0 0 C1.28065086 -0.01496269 1.28065086 -0.01496269 2.58717346 -0.03022766 C3.99526779 -0.03122467 3.99526779 -0.03122467 5.43180847 -0.03224182 C6.41893326 -0.04056534 7.40605804 -0.04888885 8.4230957 -0.0574646 C11.69972126 -0.08164059 14.97614799 -0.09034645 18.25285339 -0.09693909 C20.52488263 -0.10590035 22.79691124 -0.11502209 25.06893921 -0.1242981 C29.83802222 -0.14081182 34.60703484 -0.14849242 39.37614441 -0.15138245 C45.48982677 -0.15676555 51.60284817 -0.19443311 57.71634388 -0.24012661 C62.41150328 -0.26985906 67.1065029 -0.2771052 71.80174828 -0.2781086 C74.0556357 -0.28231924 76.30952324 -0.29478714 78.56331825 -0.31562614 C81.716591 -0.34245763 84.86832392 -0.3377387 88.02165222 -0.32521057 C88.95430908 -0.34004486 89.88696594 -0.35487915 90.84788513 -0.37016296 C95.14113014 -0.32154732 97.34291145 -0.10589661 101.00007629 2.29916382 C103.43319542 6.06775565 103.61884843 9.12546813 103.55192566 13.47337341 C103.56265862 14.69137131 103.56265862 14.69137131 103.5736084 15.93397522 C103.59047791 18.61044567 103.57110412 21.28523693 103.54972839 23.96165466 C103.55055726 25.8258325 103.5530173 27.69001027 103.55703735 29.55418396 C103.55989415 33.45813538 103.54520581 37.3615127 103.51774597 41.2653656 C103.48366333 46.26584905 103.48968248 51.26530604 103.50840855 56.26583862 C103.51898451 60.11437004 103.51003531 63.96266321 103.49502373 67.81117249 C103.48984583 69.65473218 103.49031896 71.4983168 103.49656868 73.34187317 C103.50202815 75.92010365 103.48162351 78.4968721 103.45426941 81.07493591 C103.46405823 82.21438156 103.46405823 82.21438156 103.4740448 83.37684631 C103.40861314 87.00948184 103.018813 89.11754946 101.07498169 92.22410583 C97.78012306 95.35972366 95.09193004 95.39325996 90.73332214 95.33665466 C89.38174011 95.32311951 89.38174011 95.32311951 88.00285339 95.30931091 C87.31578308 95.29770935 86.62871277 95.28610779 85.92082214 95.27415466 C85.93129578 95.83924744 85.94176941 96.40434021 85.95256042 96.98655701 C85.99407003 99.54071119 86.02013174 102.09479448 86.04582214 104.64915466 C86.06257996 105.53860779 86.07933777 106.42806091 86.09660339 107.34446716 C86.10304871 108.19524841 86.10949402 109.04602966 86.11613464 109.92259216 C86.12660828 110.70811462 86.13708191 111.49363708 86.14787292 112.30296326 C85.92082214 114.27415466 85.92082214 114.27415466 83.92082214 116.27415466 C78.54904073 116.16034573 75.79912366 113.85327771 72.17082214 110.21165466 C71.12619374 109.21060706 70.0792842 108.21193491 69.03019714 107.21556091 C68.51134949 106.71943298 67.99250183 106.22330505 67.45793152 105.71214294 C65.19102453 103.59141833 62.82649469 101.60999131 60.42082214 99.64915466 C59.26066589 98.70169373 59.26066589 98.70169373 58.07707214 97.73509216 C53.77651012 94.82130557 49.1456933 95.07454062 44.09269714 94.95774841 C43.34369141 94.93696732 42.59468567 94.91618622 41.82298279 94.89477539 C39.43901927 94.82958379 37.05494903 94.77053683 34.67082214 94.71165466 C33.0510196 94.66844051 31.43122771 94.6248253 29.81144714 94.58079529 C25.84801382 94.4739337 21.88447354 94.37258133 17.92082214 94.27415466 C17.94176941 95.31757019 17.96271667 96.36098572 17.98429871 97.4360199 C18.05724394 101.34408087 18.10281778 105.25208291 18.14054871 109.16062927 C18.160541 110.84530287 18.18774437 112.52990817 18.22257996 114.21434021 C18.62555312 134.2148463 18.62555312 134.2148463 12.43717957 140.86961365 C8.69147757 144.20176512 5.56753262 145.39355419 0.65219116 145.42132568 C-0.65359642 145.43205864 -0.65359642 145.43205864 -1.98576355 145.44300842 C-2.93802826 145.44569733 -3.89029297 145.44838623 -4.87141418 145.45115662 C-5.87658585 145.45772781 -6.88175751 145.46429901 -7.91738892 145.47106934 C-11.24866305 145.49080392 -14.57989212 145.50246466 -17.91120911 145.51243591 C-19.04835546 145.51651144 -20.18550182 145.52058697 -21.35710716 145.524786 C-27.37456964 145.54564632 -33.3920093 145.55994885 -39.40950012 145.56932068 C-45.62718713 145.58039159 -51.8445169 145.61479983 -58.06207752 145.65449238 C-62.84132558 145.68062409 -67.62048803 145.68900942 -72.39980125 145.69260216 C-74.69193118 145.69747614 -76.98405709 145.7091131 -79.27611732 145.72764015 C-82.48395329 145.75196003 -85.69085821 145.75107943 -88.89875793 145.74412537 C-90.31804596 145.76334045 -90.31804596 145.76334045 -91.76600647 145.78294373 C-97.3864447 145.73854329 -100.62994851 145.04582703 -105.07917786 141.27415466 C-109.26942695 136.73471814 -111.31313621 132.53317557 -111.3697052 126.33543396 C-111.3824649 125.3806163 -111.39522461 124.42579865 -111.40837097 123.44204712 C-111.41170944 121.91067863 -111.41170944 121.91067863 -111.41511536 120.34837341 C-111.42177216 119.28681534 -111.42842896 118.22525726 -111.43528748 117.13153076 C-111.44539977 114.8881554 -111.45010494 112.64475005 -111.44978333 110.40135193 C-111.45414919 106.98409438 -111.4904652 103.56813638 -111.52839661 100.15110779 C-111.53426663 97.96686739 -111.53823478 95.78262089 -111.54011536 93.59837341 C-111.56167191 92.07611397 -111.56167191 92.07611397 -111.58366394 90.52310181 C-111.5382558 83.40721476 -110.47272016 77.71148461 -105.26277161 72.43431091 C-104.3984552 71.89097107 -104.3984552 71.89097107 -103.51667786 71.33665466 C-102.93788879 70.95638123 -102.35909973 70.57610779 -101.76277161 70.18431091 C-97.47796444 67.86793024 -93.29247447 68.13995393 -88.56867981 68.16062927 C-87.70017395 68.16048325 -86.83166809 68.16033722 -85.93684387 68.16018677 C-83.06369029 68.16088391 -80.19060138 68.16866706 -77.31745911 68.17649841 C-75.32634517 68.1783633 -73.33523077 68.17978687 -71.34411621 68.18078613 C-66.10145299 68.18460576 -60.85881744 68.19443135 -55.61616516 68.20549011 C-50.26725133 68.21571613 -44.91833302 68.22028631 -39.56941223 68.22532654 C-29.07265528 68.23605408 -18.57591887 68.25312389 -8.07917786 68.27415466 C-8.10816162 67.32438248 -8.13714539 66.37461029 -8.16700745 65.39605713 C-8.27664921 61.79371301 -8.38486102 58.19132699 -8.49269104 54.58892822 C-8.53910864 53.04450363 -8.58588867 51.50008987 -8.6330719 49.95568848 C-9.92029016 7.78041135 -9.92029016 7.78041135 -6.07917786 2.27415466 C-3.70360135 -0.10142184 -3.22790643 0.02018081 0 0 Z " fill="#6AC379" transform="translate(149.0791778564453,3.7258453369140625)"/>
<path d="M0 0 C1.34752602 -0.00043808 1.34752602 -0.00043808 2.72227478 -0.00088501 C5.67115166 0.00050062 8.61977115 0.01602561 11.56860352 0.03173828 C13.62126019 0.03547114 15.67391866 0.03831682 17.72657776 0.04031372 C23.11389129 0.0479287 28.50109599 0.06755883 33.8883667 0.08972168 C39.39179004 0.11022616 44.89523106 0.11932527 50.39868164 0.12939453 C61.18584638 0.15080677 71.97290197 0.18597148 82.76000977 0.22705078 C82.76000977 11.44705078 82.76000977 22.66705078 82.76000977 34.22705078 C78.76302979 34.24892456 78.76302979 34.24892456 74.68530273 34.27124023 C65.87622047 34.32160219 57.06731467 34.38820022 48.25840569 34.46276569 C42.91813545 34.50747198 37.57794155 34.54672768 32.23754883 34.57348633 C27.08269796 34.59951651 21.92814081 34.63991725 16.77347183 34.69023705 C14.80796083 34.70690762 12.84239902 34.71842071 10.87682724 34.72466469 C8.12126709 34.73430359 5.36645869 34.76236056 2.61108398 34.79467773 C1.80043991 34.79324265 0.98979584 34.79180756 0.15458679 34.79032898 C-6.10761884 34.89403477 -10.1663981 36.43622121 -14.98999023 40.60205078 C-18.36982055 44.54518615 -19.48348957 48.01334654 -19.53051758 53.16577148 C-19.54327728 54.12058914 -19.55603699 55.0754068 -19.56918335 56.05915833 C-19.571409 57.08007065 -19.57363464 58.10098297 -19.57592773 59.15283203 C-19.58258453 60.21439011 -19.58924133 61.27594818 -19.59609985 62.36967468 C-19.60621215 64.61305004 -19.61091731 66.85645539 -19.6105957 69.09985352 C-19.61496157 72.51711107 -19.65127758 75.93306906 -19.68920898 79.35009766 C-19.69507901 81.53433805 -19.69904716 83.71858456 -19.70092773 85.90283203 C-19.71529877 86.91767166 -19.7296698 87.93251129 -19.74447632 88.97810364 C-19.70461303 95.22505931 -18.87913435 100.0385242 -15.23999023 105.22705078 C-11.54581131 108.65735978 -9.09609554 110.34783503 -4.09161377 110.36749268 C-2.78788818 110.37605789 -2.78788818 110.37605789 -1.45782471 110.38479614 C-0.50196472 110.385914 0.45389526 110.38703186 1.4387207 110.38818359 C2.44374634 110.3931485 3.44877197 110.3981134 4.48425293 110.40322876 C7.82097042 110.41787603 11.15764035 110.4246572 14.49438477 110.43017578 C16.80885825 110.4359258 19.12333172 110.44168355 21.43780518 110.44744873 C26.29683657 110.45796649 31.15585139 110.46380386 36.01489258 110.46728516 C42.24039005 110.47276678 48.46566846 110.49678463 54.69109726 110.52525711 C59.47463621 110.54388531 64.25812248 110.54908923 69.04169464 110.55062103 C71.33660325 110.55364845 73.63151091 110.56167994 75.92638397 110.57480621 C79.1389986 110.59186761 82.3510791 110.58998583 85.5637207 110.58349609 C86.9853653 110.59731827 86.9853653 110.59731827 88.43572998 110.61141968 C93.63847999 110.57850971 97.26262685 110.14149527 101.76000977 107.22705078 C107.29444661 101.53887958 108.0569306 95.43771767 108.17407227 87.76611328 C108.19343842 86.97554535 108.21280457 86.18497742 108.23275757 85.37045288 C108.29217029 82.86442596 108.33878403 80.35835213 108.38500977 77.85205078 C108.4232249 76.14500035 108.46227865 74.43796848 108.50219727 72.73095703 C108.59940701 68.56308905 108.67927721 64.39540028 108.76000977 60.22705078 C119.98000977 60.22705078 131.20000977 60.22705078 142.76000977 60.22705078 C142.76000977 72.29639035 142.16563405 83.02089085 133.76000977 92.22705078 C128.82452589 95.22705078 128.82452589 95.22705078 125.76000977 95.22705078 C125.67750977 96.52642578 125.59500977 97.82580078 125.51000977 99.16455078 C124.46570903 108.16811658 120.36930016 115.09940908 113.76000977 121.22705078 C104.68676932 128.02335637 96.01965556 129.3713246 84.921875 129.40405273 C83.94701645 129.41062393 82.9721579 129.41719513 81.96775818 129.42396545 C78.75137239 129.44362459 75.53503319 129.45534602 72.31860352 129.46533203 C71.21501055 129.46940756 70.11141758 129.47348309 68.9743824 129.47768211 C63.13038447 129.49851368 57.2864098 129.51282672 51.44238281 129.5222168 C45.43285085 129.53326131 39.42369116 129.56764741 33.41429043 129.6073885 C28.77030287 129.63364425 24.12640273 129.64191669 19.48234749 129.64549828 C17.26857051 129.65034283 15.05479686 129.6618953 12.84109306 129.68053627 C-16.61109032 129.91308661 -16.61109032 129.91308661 -25.73999023 120.97705078 C-32.4359488 114.34631259 -37.01262249 107.47966387 -37.36499023 97.78955078 C-37.32374023 96.94392578 -37.28249023 96.09830078 -37.23999023 95.22705078 C-38.29186523 95.02080078 -39.34374023 94.81455078 -40.42749023 94.60205078 C-44.67513796 93.36029893 -46.96514389 90.94237076 -49.23999023 87.22705078 C-55.35343002 75.5353545 -56.48428189 61.22312092 -52.61499023 48.53955078 C-50.42945162 42.95170204 -47.4943069 38.14658913 -42.23999023 35.04736328 C-40.23999023 34.22705078 -40.23999023 34.22705078 -37.23999023 34.22705078 C-37.34311523 33.31955078 -37.44624023 32.41205078 -37.55249023 31.47705078 C-37.53672473 23.72042218 -33.31468201 15.31786633 -28.03686523 9.75439453 C-19.49625132 2.4948727 -10.96961629 -0.09445276 0 0 Z " fill="#D5E7FD" transform="translate(58.239990234375,37.77294921875)"/>
<path d="M0 0 C0.89835068 -0.00073013 1.79670135 -0.00146027 2.72227478 -0.00221252 C5.67167976 0.00125218 8.61947675 0.0400601 11.56860352 0.0793457 C13.62125282 0.08867781 15.67391331 0.09579204 17.72657776 0.1007843 C23.11415666 0.11982268 28.50105545 0.16889665 33.8883667 0.2243042 C39.39171144 0.27556467 44.89516669 0.29831288 50.39868164 0.32348633 C61.18613703 0.37701836 71.97291029 0.46492879 82.76000977 0.56762695 C82.76000977 6.17762695 82.76000977 11.78762695 82.76000977 17.56762695 C80.45000977 17.89762695 78.14000977 18.22762695 75.76000977 18.56762695 C73.44187356 20.45873807 72.09086961 21.90590726 70.76000977 24.56762695 C70.63661527 29.13322319 70.92648629 32.56249571 73.88500977 36.13012695 C77.53440583 37.95482498 79.72444944 38.14413557 83.76000977 37.56762695 C86.71119692 36.20689053 86.71119692 36.20689053 88.76000977 33.56762695 C89.42000977 30.92762695 90.08000977 28.28762695 90.76000977 25.56762695 C96.37000977 25.56762695 101.98000977 25.56762695 107.76000977 25.56762695 C107.82902856 31.01244269 107.88871703 36.4557295 107.92480469 41.90063477 C107.93985447 43.75127314 107.9602991 45.60187606 107.98632812 47.45239258 C108.02287956 50.1184974 108.03977431 52.78412903 108.05297852 55.45043945 C108.06846237 56.27254913 108.08394623 57.09465881 108.09989929 57.94168091 C108.10153991 63.59176433 107.21417846 67.87698887 103.26000977 72.2121582 C99.26722635 75.32112237 96.51567153 76.68641091 91.49137878 76.71479797 C90.62085373 76.72195328 89.75032867 76.72910858 88.85342407 76.73648071 C87.42502701 76.74051407 87.42502701 76.74051407 85.96777344 76.74462891 C84.96260178 76.7512001 83.95743011 76.7577713 82.92179871 76.76454163 C79.59052457 76.78427621 76.2592955 76.79593695 72.92797852 76.8059082 C71.79083216 76.80998373 70.6536858 76.81405926 69.48208046 76.81825829 C63.46461798 76.83911861 57.44717832 76.85342114 51.4296875 76.86279297 C45.21200049 76.87386388 38.99467072 76.90827212 32.7771101 76.94796467 C27.99786204 76.97409638 23.21869959 76.98248171 18.43938637 76.98607445 C16.14725644 76.99094843 13.85513053 77.00258539 11.5630703 77.02111244 C8.35523433 77.04543232 5.14832942 77.04455172 1.94042969 77.03759766 C0.99423767 77.05040771 0.04804565 77.06321777 -0.92681885 77.07641602 C-6.54725708 77.03201558 -9.79076089 76.33929932 -14.23999023 72.56762695 C-18.43023933 68.02819043 -20.47394859 63.82664786 -20.53051758 57.62890625 C-20.54327728 56.67408859 -20.55603699 55.71927094 -20.56918335 54.73551941 C-20.57252182 53.20415092 -20.57252182 53.20415092 -20.57592773 51.6418457 C-20.58258453 50.58028763 -20.58924133 49.51872955 -20.59609985 48.42500305 C-20.60621215 46.18162769 -20.61091731 43.93822234 -20.6105957 41.69482422 C-20.61496157 38.27756667 -20.65127758 34.86160867 -20.68920898 31.44458008 C-20.69507901 29.26033968 -20.69904716 27.07609318 -20.70092773 24.8918457 C-20.72248428 23.36958626 -20.72248428 23.36958626 -20.74447632 21.8165741 C-20.70592677 15.77549353 -20.24566105 10.34663689 -16.23999023 5.56762695 C-11.1259954 0.71883568 -6.89707514 -0.1484664 0 0 Z " fill="#193970" transform="translate(58.239990234375,72.432373046875)"/>
<path d="M0 0 C8.62696742 4.5137526 11.19007944 13.23703118 13.93359375 21.97265625 C16.13536346 29.6314437 17.18927649 37.08494824 17.25 45.0625 C17.270625 45.74376953 17.29125 46.42503906 17.3125 47.12695312 C17.34875461 51.84458414 16.42691547 54.97352661 14 59 C13 60 13 60 10.4375 60.5 C4.37607921 59.61833879 0.90429382 55.32925202 -2.85546875 50.73046875 C-12.01054644 38.22055023 -17.23590969 25.68884287 -17.49609375 10.19921875 C-16.89601648 6.32942913 -15.75788717 4.73849956 -13 2 C-8.88298891 -0.65012328 -4.74546486 -0.97563011 0 0 Z " fill="#D6E8FE" transform="translate(184,179)"/>
<path d="M0 0 C4.07716893 2.07564964 6.35651027 3.74626188 8 8 C9.77137785 22.83014011 3.63213024 37.97643103 -5.31054688 49.72119141 C-12.29694642 58.14847321 -12.29694642 58.14847321 -16 60 C-18.3329866 60.04022391 -20.66706666 60.04320247 -23 60 C-26.05977506 54.91119639 -26.51166716 50.95664518 -26.4375 45.1875 C-26.42992676 44.35726318 -26.42235352 43.52702637 -26.41455078 42.67163086 C-26.06147305 29.10648751 -22.97230213 12.93631313 -13.25 2.8125 C-9.03509811 -0.58283763 -5.27266109 -0.64689792 0 0 Z " fill="#D7E9FE" transform="translate(30,179)"/>
<path d="M0 0 C5.67458978 1.92721917 9.32050871 5.64101742 12 11 C12.59381502 16.87000746 12.82644408 22.4873709 9.38671875 27.49609375 C5.51924706 31.69039403 1.25574537 34.25718898 -4.5 34.625 C-9.54865707 34.31109386 -13.22111869 32.28301 -17 29 C-21.14950335 23.68012391 -22.45667163 19.73590657 -22 13 C-18.38416639 2.57789136 -10.24271236 -0.85224417 0 0 Z " fill="#1B3A72" transform="translate(107,188)"/>
<path d="M0 0 C0 20.13 0 40.26 0 61 C-6.49437743 59.14446359 -8.70992348 58.37341216 -12 53 C-18.11343978 41.30830372 -19.24429165 26.99607014 -15.375 14.3125 C-13.18946138 8.72465126 -10.25431667 3.91953835 -5 0.8203125 C-3 0 -3 0 0 0 Z " fill="#AFCADC" transform="translate(21,72)"/>
<path d="M0 0 C0.72030396 -0.00175232 1.44060791 -0.00350464 2.18273926 -0.00531006 C4.57497534 -0.00972835 6.9671381 -0.00679068 9.359375 -0.00341797 C11.01464858 -0.00409101 12.66992207 -0.00506105 14.32519531 -0.00631714 C17.79883767 -0.00779408 21.27245437 -0.00563968 24.74609375 -0.00097656 C29.20869998 0.00472073 33.67124608 0.0014417 38.1338501 -0.00454903 C41.5532273 -0.00815474 44.97259015 -0.00701601 48.39196777 -0.00442123 C50.03788256 -0.00375199 51.68379863 -0.00458029 53.32971191 -0.00690079 C55.62609331 -0.00942749 57.92237599 -0.0055865 60.21875 0 C61.52811523 0.00079559 62.83748047 0.00159119 64.18652344 0.00241089 C67.109375 0.12939453 67.109375 0.12939453 68.109375 1.12939453 C68.234375 4.12939453 68.234375 4.12939453 68.109375 7.12939453 C66.209371 9.02939853 62.8462304 8.26720427 60.32641602 8.2746582 C59.61747192 8.27801682 58.90852783 8.28137543 58.17810059 8.28483582 C55.82314322 8.29437269 53.46825675 8.29629029 51.11328125 8.29736328 C49.48282338 8.30057398 47.85236581 8.30393791 46.22190857 8.30744934 C42.79954358 8.31344748 39.37720387 8.31528854 35.95483398 8.31469727 C31.56178268 8.31459561 27.16889287 8.32824846 22.77587986 8.34546947 C19.40707144 8.35656877 16.03830231 8.35861711 12.66947746 8.35808754 C11.04950338 8.35927077 9.42952839 8.3637116 7.80957222 8.37141991 C5.54684145 8.3811782 3.28446454 8.37835846 1.02172852 8.37231445 C-0.26765121 8.37373947 -1.55703094 8.37516449 -2.88548279 8.37663269 C-5.890625 8.12939453 -5.890625 8.12939453 -7.890625 6.12939453 C-8.078125 3.56689453 -8.078125 3.56689453 -7.890625 1.12939453 C-5.97856198 -0.78266849 -2.52936116 0.00153688 0 0 Z " fill="#55A060" transform="translate(165.890625,25.87060546875)"/>
<path d="M0 0 C1.28937973 0.00142502 2.57875946 0.00285004 3.9072113 0.00431824 C4.97325592 0.00147072 4.97325592 0.00147072 6.06083679 -0.00143433 C8.41525728 -0.0051459 10.76937086 0.0055664 13.12376404 0.01676941 C14.75518762 0.017961 16.38661189 0.01841442 18.01803589 0.01815796 C21.43865752 0.01972343 24.85917457 0.02801856 28.2797699 0.04142761 C32.67397404 0.058431 37.0680633 0.06224161 41.46229649 0.06148243 C44.83106593 0.06175376 48.19981005 0.06722874 51.56857109 0.07448387 C53.18936407 0.07767554 54.81015993 0.0796391 56.43095589 0.08037758 C58.69132043 0.08253514 60.95156075 0.09126617 63.2118988 0.10197449 C65.14477501 0.10769218 65.14477501 0.10769218 67.11669922 0.11352539 C69.99485779 0.24723816 69.99485779 0.24723816 70.99485779 1.24723816 C71.11985779 4.24723816 71.11985779 4.24723816 70.99485779 7.24723816 C69.99485779 8.24723816 69.99485779 8.24723816 67.0652771 8.36749268 C65.75289566 8.36527206 64.44051422 8.36305145 63.08836365 8.36076355 C62.3664534 8.36090958 61.64454315 8.3610556 60.90075684 8.36120605 C58.50370831 8.36050685 56.10673656 8.35271411 53.70970154 8.34489441 C52.0520329 8.34303026 50.39436372 8.34160634 48.73669434 8.34060669 C44.36531565 8.33678128 39.99396998 8.32695081 35.62260437 8.31590271 C31.16531318 8.30568907 26.70801667 8.30110917 22.25071716 8.29606628 C13.49874886 8.28532856 4.74680742 8.26825187 -4.00514221 8.24723816 C-4.63014221 5.37223816 -4.63014221 5.37223816 -5.00514221 2.24723816 C-3.00514221 0.24723816 -3.00514221 0.24723816 0 0 Z " fill="#55A060" transform="translate(163.00514221191406,46.75276184082031)"/>
<path d="M0 0 C1.17139023 -0.00953201 2.34278046 -0.01906403 3.54966736 -0.02888489 C4.8204866 -0.02797348 6.09130585 -0.02706207 7.40063477 -0.02612305 C8.7002565 -0.03040817 9.99987823 -0.0346933 11.33888245 -0.03910828 C14.09201124 -0.04657532 16.84501182 -0.04627592 19.59814453 -0.04101562 C23.12691263 -0.03522209 26.65515566 -0.05214604 30.18383694 -0.0753603 C33.54779184 -0.09363334 36.91163044 -0.08991245 40.27563477 -0.08862305 C42.17882729 -0.10243767 42.17882729 -0.10243767 44.12046814 -0.11653137 C45.88228172 -0.10718819 45.88228172 -0.10718819 47.6796875 -0.09765625 C48.71512192 -0.09828568 49.75055634 -0.0989151 50.81736755 -0.0995636 C53.40454102 0.2746582 53.40454102 0.2746582 55.27406311 1.63386536 C56.40454102 3.2746582 56.40454102 3.2746582 56.21704102 5.8996582 C55.40454102 8.2746582 55.40454102 8.2746582 53.40454102 9.2746582 C51.53621412 9.37592588 49.66426962 9.4130486 47.79321289 9.41992188 C46.61859497 9.42630173 45.44397705 9.43268158 44.23376465 9.43925476 C42.95980835 9.44036758 41.68585205 9.44148041 40.37329102 9.44262695 C39.07129761 9.44595535 37.7693042 9.44928375 36.42785645 9.45271301 C33.67056448 9.45870383 30.91330387 9.46055291 28.15600586 9.45996094 C24.61829258 9.4598592 21.08077949 9.47352336 17.54311371 9.49073315 C14.17400281 9.50450533 10.80492975 9.50394122 7.43579102 9.50512695 C6.16183472 9.51231247 4.88787842 9.51949799 3.57531738 9.52690125 C2.40069946 9.52382462 1.22608154 9.52074799 0.01586914 9.51757812 C-1.5406134 9.51971565 -1.5406134 9.51971565 -3.12854004 9.52189636 C-5.59545898 9.2746582 -5.59545898 9.2746582 -7.59545898 7.2746582 C-7.84545898 4.7746582 -7.84545898 4.7746582 -7.59545898 2.2746582 C-4.94407938 -0.3767214 -3.70179738 0.01648462 0 0 Z " fill="#56A161" transform="translate(165.595458984375,67.725341796875)"/>
<path d="M0 0 C5.61 0 11.22 0 17 0 C17.50019883 10.3791258 16.42959687 20.202076 10.625 29.125 C7.89782879 32.1119018 5.76497916 33.57767454 2 35 C1.34 35 0.68 35 0 35 C0 23.45 0 11.9 0 0 Z " fill="#AFC9DB" transform="translate(184,98)"/>
<path d="M0 0 C0.93199219 -0.00257812 1.86398438 -0.00515625 2.82421875 -0.0078125 C3.80003906 -0.00007813 4.77585937 0.00765625 5.78125 0.015625 C6.75707031 0.00789063 7.73289062 0.00015625 8.73828125 -0.0078125 C9.67027344 -0.00523438 10.60226563 -0.00265625 11.5625 0 C12.41908203 0.00225586 13.27566406 0.00451172 14.15820312 0.00683594 C16.28125 0.265625 16.28125 0.265625 18.28125 2.265625 C18.64958438 7.07286091 17.90032354 10.48363737 14.90625 14.265625 C10.63559545 17.51945704 6.50857159 17.82825257 1.28125 17.265625 C-2.88382424 15.5070381 -4.92757468 13.41360995 -6.71875 9.265625 C-7.03125 5.578125 -7.03125 5.578125 -6.71875 2.265625 C-4.22817749 -0.22494751 -3.43402341 0.0090437 0 0 Z " fill="#20D7D8" transform="translate(96.71875,114.734375)"/>
<path d="M0 0 C3.02508145 1.73602105 5.41790069 3.83580137 7 7 C7.44408691 10.9079648 7.13704844 12.74548146 5.25 16.25 C2.25670518 19.90847144 0.71641956 20.81740217 -3.9375 21.3125 C-7.43355571 20.95575962 -9.20520785 20.09609412 -12 18 C-14.6790573 13.98141405 -14.69610694 10.72358279 -14 6 C-10.43657546 0.29852073 -6.63696398 -1.13283986 0 0 Z " fill="#20D7D8" transform="translate(70,90)"/>
<path d="M0 0 C0.391875 0.94875 0.78375 1.8975 1.1875 2.875 C3.19793856 6.34127338 4.22699642 6.9802693 8 8 C8.34751969 10.91916538 8.53280018 13.13195476 6.95703125 15.69921875 C3.99314771 19.28890761 2.37632477 20.8411933 -2.25 21.375 C-6.02003278 20.99799672 -8.05146782 20.30796862 -10.83203125 17.69140625 C-13.09455008 14.41491577 -13.31780124 10.89129966 -13 7 C-10.24175105 0.51811496 -6.70247449 -0.25292357 0 0 Z " fill="#20D7D8" transform="translate(141,90)"/>
</svg>
)
  return (
    <PortalToFollowElem
      open={open}
      onOpenChange={setOpen}
      placement='bottom-start'
      offset={4}
    >
      <div className='relative'>
        <PortalToFollowElemTrigger
          onClick={() => setOpen(v => !v)}
          className='block'
        >
          <div className={cn('flex cursor-pointer pl-1 p-1.5 rounded-lg hover:bg-gray-100', open && 'bg-gray-100')}>
            {/* <div className='relative shrink-0 mr-2'> */}
              {/* <AppIcon size={expand ? 'large' : 'small'} icon={appDetail.icon} background={appDetail.icon_background} />
              <span className={cn(
                'absolute bottom-[-3px] right-[-3px] w-4 h-4 p-0.5 bg-white rounded border-[0.5px] border-[rgba(0,0,0,0.02)] shadow-sm',
                !expand && '!w-3.5 !h-3.5 !bottom-[-2px] !right-[-2px]',
              )}> */}
                {/* {appDetail.mode === 'advanced-chat' && (
                  // <ChatBot className={cn('w-10 h-10 text-[#1570EF]', !expand && '!w-2.5 !h-2.5')} />
                  <img className='w-10 h-10' src='/assets/agentIcon.png' alt='advanced-chat' />
                )} */}
                {/* {appDetail.mode === 'agent-chat' && (
                  // <CuteRobote className={cn('w-10 h-10 text-indigo-600', !expand && '!w-2.5 !h-2.5')} />
                  <img className='w-10 h-10' src='assets/agentIcon.png' alt='agent-chat' />

                )} */}
                {/* {appDetail.mode === 'chat' && (
                  // <ChatBot className={cn('w-3 h-3 text-[#1570EF]', !expand && '!w-2.5 !h-2.5')} />
                  <img className='w-10 h-10' src='/assets/chatguy.png' alt='chat' />

                )} */}
                {/* {appDetail.mode === 'completion' && (
                  // <AiText className={cn('w-3 h-3 text-[#0E9384]', !expand && '!w-2.5 !h-2.5')} />
                  <img className='w-10 h-10' src='/assets/texteditor.png' alt='chat' />
                )}
                {appDetail.mode === 'workflow' && (
                  // <Route className={cn('w-3 h-3 text-[#f79009]', !expand && '!w-2.5 !h-2.5')} />
                  <img className='w-10 h-10' src='/assets/workload.png' alt='chat' />
                )} */}
              {/* </span> */}
            {/* </div> */}
            {expand && (
              <div className="grow w-0">
                <div className='flex justify-between items-center text-sm leading-5 font-medium text-gray-900'>
                  <div className='truncate' title={appDetail.name}>{appDetail.name}</div>
                  {/* <ChevronDown className='shrink-0 ml-[2px] w-3 h-3 text-gray-500' /> */}
                </div>
                {/* <div className='flex items-center text-[10px] leading-[18px] font-medium text-gray-500 gap-1'>
                  {appDetail.mode === 'advanced-chat' && (
                    <>
                      <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.chatbot').toUpperCase()}</div>
                      <div title={t('app.newApp.advanced') || ''} className='px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.newApp.advanced').toUpperCase()}</div>
                    </>
                  )}
                  {appDetail.mode === 'agent-chat' && (
                    <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.agent').toUpperCase()}</div>
                  )}
                  {appDetail.mode === 'chat' && (
                    <>
                      <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.chatbot').toUpperCase()}</div>
                      <div title={t('app.newApp.basic') || ''} className='px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{(t('app.newApp.basic').toUpperCase())}</div>
                    </>
                  )}
                  {appDetail.mode === 'completion' && (
                    <>
                      <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.completion').toUpperCase()}</div>
                      <div title={t('app.newApp.basic') || ''} className='px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{(t('app.newApp.basic').toUpperCase())}</div>
                    </>
                  )}
                  {appDetail.mode === 'workflow' && (
                    <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.workflow').toUpperCase()}</div>
                  )}
                </div> */}
              </div>
            )}
          </div>
        </PortalToFollowElemTrigger>
        <PortalToFollowElemContent className='z-[1002]'>
          {/* <div className='relative w-[320px] bg-white rounded-2xl shadow-xl'> */}
          <div className='relative w-fit bg-white rounded-2xl shadow-xl'>

            {/* header */}
            <div className={cn('flex pl-4 pt-3 pr-3', !appDetail.description && 'pb-2')}>
              <div className='relative shrink-0 mr-2'>
                {/* <AppIcon size="large" icon={appDetail.icon} background={appDetail.icon_background} /> */}
                {/* <span className='absolute bottom-[-3px] right-[-3px] w-4 h-4 p-0.5 bg-white rounded border-[0.5px] border-[rgba(0,0,0,0.02)] shadow-sm'> */}
                  {/* {appDetail.mode === 'advanced-chat' && (
                    // <ChatBot className='w-3 h-3 text-[#1570EF]' />
                    <img src='assets/chatguy.png' alt='advanced-chat' />

                  )}
                  {appDetail.mode === 'agent-chat' && (
                    // <CuteRobote className='w-3 h-3 text-indigo-600' />
                    <img src='assets/agentIcon.png' alt='agent' />

                  )}
                  {appDetail.mode === 'chat' && (
                    // <ChatBot className='w-3 h-3 text-[#1570EF]' />
                    <img src='assets/chatguy.png' alt='chat' />

                  )}
                  {appDetail.mode === 'completion' && (
                    // <AiText className='w-3 h-3 text-[#0E9384]' />
                    <img src='assets/texteditor.png' alt='chat' />

                  )}
                  {appDetail.mode === 'workflow' && (
                    // <Route className='w-3 h-3 text-[#f79009]' />
                    <img src='assets/workload.png' alt='chat' />

                  )} */}
                {/* </span> */}
              </div>
              <div className='grow w-0'>
                <div title={appDetail.name} className='flex justify-between items-center text-sm leading-5 font-medium text-gray-900 truncate'>{appDetail.name}</div>
                {/* <div className='flex items-center text-[10px] leading-[18px] font-medium text-gray-500 gap-1'>
                  {appDetail.mode === 'advanced-chat' && (
                    <>
                      <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.chatbot').toUpperCase()}</div>
                      <div title={t('app.newApp.advanced') || ''} className='px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.newApp.advanced').toUpperCase()}</div>
                    </>
                  )}
                  {appDetail.mode === 'agent-chat' && (
                    <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.agent').toUpperCase()}</div>
                  )}
                  {appDetail.mode === 'chat' && (
                    <>
                      <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.chatbot').toUpperCase()}</div>
                      <div title={t('app.newApp.basic') || ''} className='px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{(t('app.newApp.basic').toUpperCase())}</div>
                    </>
                  )}
                  {appDetail.mode === 'completion' && (
                    <>
                      <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.completion').toUpperCase()}</div>
                      <div title={t('app.newApp.basic') || ''} className='px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{(t('app.newApp.basic').toUpperCase())}</div>
                    </>
                  )}
                  {appDetail.mode === 'workflow' && (
                    <div className='shrink-0 px-1 border bg-white border-[rgba(0,0,0,0.08)] rounded-[5px] truncate'>{t('app.types.workflow').toUpperCase()}</div>
                  )}
                </div> */}
              </div>
            </div>
            {/* desscription */}
            {appDetail.description && (
              <div className='px-4 py-2 text-gray-500 text-xs leading-[18px]'>{appDetail.description}</div>
            )}
            {/* operations */}
            {/* <Divider className="!my-1" /> */}
           <div className="w-fit py-1 justify-start">
              {/* <div className='h-9 py-2 px-3 mx-1 flex items-center hover:bg-gray-50 rounded-lg cursor-pointer' onClick={() => { */}
              <div className='h-9 py-2 px-3 mx-1 flex justify-start hover:bg-gray-50 rounded-lg cursor-pointer' onClick={() => {

                setOpen(false)
                setShowEditModal(true)
              }}>
                <span className='px-2 py-1 opacity-50 '><Edit02 /></span>
                <span className='text-gray-700 text-sm leading-5'>{t('app.editApp')}</span>

              </div>
              <div className='h-9 py-2 px-3 mx-1 flex items-center hover:bg-gray-50 rounded-lg cursor-pointer' onClick={() => {
                setOpen(false)
                setShowDuplicateModal(true)
              }}>
                <span className='px-2 py-1 opacity-50 '><DuplicateIcon /></span>
                <span className='text-gray-700 text-sm leading-5'>{t('app.duplicate')}</span>

              </div>
              <div className='h-9 py-2 px-3 mx-1 flex items-center hover:bg-gray-50 rounded-lg cursor-pointer' onClick={onExport}>
                <span className='px-2 py-1 opacity-50 '><ExportIcon/></span>
                <span className='text-gray-700 text-sm leading-5'>{t('app.export')}</span>

              </div>
              {(appDetail.mode === 'completion' || appDetail.mode === 'chat') && (
                <>
                  {/* <Divider className="!my-1" /> */}
                  <div
                    className='h-9 py-2 px-3 mx-1 flex items-center hover:bg-gray-50 rounded-lg cursor-pointer'
                    onMouseEnter={() => setShowSwitchTip(appDetail.mode)}
                    onMouseLeave={() => setShowSwitchTip('')}
                    onClick={() => {
                      setOpen(false)
                      setShowSwitchModal(true)
                    }}
                  >
                    
                    <span className='px-2 py-1 opacity-50 '><SwitchIcon /></span>
                    <span className='text-gray-700 text-sm leading-5'>{t('app.switch')}</span>
                  </div>
                </>
              )}
              {/* <Divider className="!my-1" /> */}
              <div className='group h-9 py-2 px-3 mx-1 flex items-center hover:bg-red-50 rounded-lg cursor-pointer' onClick={() => {
                setOpen(false)
                setShowConfirmDelete(true)
              }}>
                
                <span className='px-2 py-1 opacity-50 hover:bg-red-500'><Trash03/></span>
                <span className='text-gray-700 text-sm leading-5 group-hover:text-red-500'>
                  {t('common.operation.delete')}
                </span>
              </div>
            </div> 
            
            {/* switch tip */}
            <div
              className={cn(
                'hidden absolute left-[324px] top-0 w-[376px] rounded-xl bg-white border-[0.5px] border-[rgba(0,0,0,0.05)] shadow-lg',
                showSwitchTip && '!block',
              )}
            >
              <div className={cn(
                'w-full h-[256px] bg-center bg-no-repeat bg-contain rounded-xl',
                showSwitchTip === 'chat' && s.expertPic,
                showSwitchTip === 'completion' && s.completionPic,
              )}/>
              <div className='px-4 pb-2'>
                <div className='flex items-center gap-1 text-gray-700 text-md leading-6 font-semibold'>
                  {showSwitchTip === 'chat' ? t('app.newApp.advanced') : t('app.types.workflow')}
                  <span className='px-1 rounded-[5px] bg-white border border-black/8 text-gray-500 text-[10px] leading-[18px] font-medium'>BETA</span>
                </div>
                <div className='text-orange-500 text-xs leading-[18px] font-medium'>{t('app.newApp.advancedFor').toLocaleUpperCase()}</div>
                <div className='mt-1 text-gray-500 text-sm leading-5'>{t('app.newApp.advancedDescription')}</div>
              </div>
            </div>
          </div>
        </PortalToFollowElemContent>
        {showSwitchModal && (
          <SwitchAppModal
            inAppDetail
            show={showSwitchModal}
            appDetail={appDetail}
            onClose={() => setShowSwitchModal(false)}
            onSuccess={() => setShowSwitchModal(false)}
          />
        )}
        {showEditModal && (
          <CreateAppModal
            isEditModal
            appIcon={appDetail.icon}
            appIconBackground={appDetail.icon_background}
            appName={appDetail.name}
            appDescription={appDetail.description}
            show={showEditModal}
            onConfirm={onEdit}
            onHide={() => setShowEditModal(false)}
          />
        )}
        {showDuplicateModal && (
          <DuplicateAppModal
            appName={appDetail.name}
            icon={appDetail.icon}
            icon_background={appDetail.icon_background}
            show={showDuplicateModal}
            onConfirm={onCopy}
            onHide={() => setShowDuplicateModal(false)}
          />
        )}
        {showConfirmDelete && (
          <Confirm
            title={t('app.deleteAppConfirmTitle')}
            content={t('app.deleteAppConfirmContent')}
            isShow={showConfirmDelete}
            onClose={() => setShowConfirmDelete(false)}
            onConfirm={onConfirmDelete}
            onCancel={() => setShowConfirmDelete(false)}
          />
        )}
      </div>
    </PortalToFollowElem>
  )
}

export default React.memo(AppInfo)
